// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package evm

import (
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var (
	md_AddERCNativePointerProposal             protoreflect.MessageDescriptor
	fd_AddERCNativePointerProposal_title       protoreflect.FieldDescriptor
	fd_AddERCNativePointerProposal_description protoreflect.FieldDescriptor
	fd_AddERCNativePointerProposal_token       protoreflect.FieldDescriptor
	fd_AddERCNativePointerProposal_pointer     protoreflect.FieldDescriptor
	fd_AddERCNativePointerProposal_version     protoreflect.FieldDescriptor
)

func init() {
	file_goeni_evm_gov_proto_init()
	md_AddERCNativePointerProposal = File_goeni_evm_gov_proto.Messages().ByName("AddERCNativePointerProposal")
	fd_AddERCNativePointerProposal_title = md_AddERCNativePointerProposal.Fields().ByName("title")
	fd_AddERCNativePointerProposal_description = md_AddERCNativePointerProposal.Fields().ByName("description")
	fd_AddERCNativePointerProposal_token = md_AddERCNativePointerProposal.Fields().ByName("token")
	fd_AddERCNativePointerProposal_pointer = md_AddERCNativePointerProposal.Fields().ByName("pointer")
	fd_AddERCNativePointerProposal_version = md_AddERCNativePointerProposal.Fields().ByName("version")
}

var _ protoreflect.Message = (*fastReflection_AddERCNativePointerProposal)(nil)

type fastReflection_AddERCNativePointerProposal AddERCNativePointerProposal

func (x *AddERCNativePointerProposal) ProtoReflect() protoreflect.Message {
	return (*fastReflection_AddERCNativePointerProposal)(x)
}

func (x *AddERCNativePointerProposal) slowProtoReflect() protoreflect.Message {
	mi := &file_goeni_evm_gov_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_AddERCNativePointerProposal_messageType fastReflection_AddERCNativePointerProposal_messageType
var _ protoreflect.MessageType = fastReflection_AddERCNativePointerProposal_messageType{}

type fastReflection_AddERCNativePointerProposal_messageType struct{}

func (x fastReflection_AddERCNativePointerProposal_messageType) Zero() protoreflect.Message {
	return (*fastReflection_AddERCNativePointerProposal)(nil)
}
func (x fastReflection_AddERCNativePointerProposal_messageType) New() protoreflect.Message {
	return new(fastReflection_AddERCNativePointerProposal)
}
func (x fastReflection_AddERCNativePointerProposal_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_AddERCNativePointerProposal
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_AddERCNativePointerProposal) Descriptor() protoreflect.MessageDescriptor {
	return md_AddERCNativePointerProposal
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_AddERCNativePointerProposal) Type() protoreflect.MessageType {
	return _fastReflection_AddERCNativePointerProposal_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_AddERCNativePointerProposal) New() protoreflect.Message {
	return new(fastReflection_AddERCNativePointerProposal)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_AddERCNativePointerProposal) Interface() protoreflect.ProtoMessage {
	return (*AddERCNativePointerProposal)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_AddERCNativePointerProposal) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Title != "" {
		value := protoreflect.ValueOfString(x.Title)
		if !f(fd_AddERCNativePointerProposal_title, value) {
			return
		}
	}
	if x.Description != "" {
		value := protoreflect.ValueOfString(x.Description)
		if !f(fd_AddERCNativePointerProposal_description, value) {
			return
		}
	}
	if x.Token != "" {
		value := protoreflect.ValueOfString(x.Token)
		if !f(fd_AddERCNativePointerProposal_token, value) {
			return
		}
	}
	if x.Pointer != "" {
		value := protoreflect.ValueOfString(x.Pointer)
		if !f(fd_AddERCNativePointerProposal_pointer, value) {
			return
		}
	}
	if x.Version != uint32(0) {
		value := protoreflect.ValueOfUint32(x.Version)
		if !f(fd_AddERCNativePointerProposal_version, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_AddERCNativePointerProposal) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "goeni.evm.AddERCNativePointerProposal.title":
		return x.Title != ""
	case "goeni.evm.AddERCNativePointerProposal.description":
		return x.Description != ""
	case "goeni.evm.AddERCNativePointerProposal.token":
		return x.Token != ""
	case "goeni.evm.AddERCNativePointerProposal.pointer":
		return x.Pointer != ""
	case "goeni.evm.AddERCNativePointerProposal.version":
		return x.Version != uint32(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goeni.evm.AddERCNativePointerProposal"))
		}
		panic(fmt.Errorf("message goeni.evm.AddERCNativePointerProposal does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AddERCNativePointerProposal) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "goeni.evm.AddERCNativePointerProposal.title":
		x.Title = ""
	case "goeni.evm.AddERCNativePointerProposal.description":
		x.Description = ""
	case "goeni.evm.AddERCNativePointerProposal.token":
		x.Token = ""
	case "goeni.evm.AddERCNativePointerProposal.pointer":
		x.Pointer = ""
	case "goeni.evm.AddERCNativePointerProposal.version":
		x.Version = uint32(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goeni.evm.AddERCNativePointerProposal"))
		}
		panic(fmt.Errorf("message goeni.evm.AddERCNativePointerProposal does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_AddERCNativePointerProposal) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "goeni.evm.AddERCNativePointerProposal.title":
		value := x.Title
		return protoreflect.ValueOfString(value)
	case "goeni.evm.AddERCNativePointerProposal.description":
		value := x.Description
		return protoreflect.ValueOfString(value)
	case "goeni.evm.AddERCNativePointerProposal.token":
		value := x.Token
		return protoreflect.ValueOfString(value)
	case "goeni.evm.AddERCNativePointerProposal.pointer":
		value := x.Pointer
		return protoreflect.ValueOfString(value)
	case "goeni.evm.AddERCNativePointerProposal.version":
		value := x.Version
		return protoreflect.ValueOfUint32(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goeni.evm.AddERCNativePointerProposal"))
		}
		panic(fmt.Errorf("message goeni.evm.AddERCNativePointerProposal does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AddERCNativePointerProposal) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "goeni.evm.AddERCNativePointerProposal.title":
		x.Title = value.Interface().(string)
	case "goeni.evm.AddERCNativePointerProposal.description":
		x.Description = value.Interface().(string)
	case "goeni.evm.AddERCNativePointerProposal.token":
		x.Token = value.Interface().(string)
	case "goeni.evm.AddERCNativePointerProposal.pointer":
		x.Pointer = value.Interface().(string)
	case "goeni.evm.AddERCNativePointerProposal.version":
		x.Version = uint32(value.Uint())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goeni.evm.AddERCNativePointerProposal"))
		}
		panic(fmt.Errorf("message goeni.evm.AddERCNativePointerProposal does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AddERCNativePointerProposal) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "goeni.evm.AddERCNativePointerProposal.title":
		panic(fmt.Errorf("field title of message goeni.evm.AddERCNativePointerProposal is not mutable"))
	case "goeni.evm.AddERCNativePointerProposal.description":
		panic(fmt.Errorf("field description of message goeni.evm.AddERCNativePointerProposal is not mutable"))
	case "goeni.evm.AddERCNativePointerProposal.token":
		panic(fmt.Errorf("field token of message goeni.evm.AddERCNativePointerProposal is not mutable"))
	case "goeni.evm.AddERCNativePointerProposal.pointer":
		panic(fmt.Errorf("field pointer of message goeni.evm.AddERCNativePointerProposal is not mutable"))
	case "goeni.evm.AddERCNativePointerProposal.version":
		panic(fmt.Errorf("field version of message goeni.evm.AddERCNativePointerProposal is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goeni.evm.AddERCNativePointerProposal"))
		}
		panic(fmt.Errorf("message goeni.evm.AddERCNativePointerProposal does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_AddERCNativePointerProposal) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "goeni.evm.AddERCNativePointerProposal.title":
		return protoreflect.ValueOfString("")
	case "goeni.evm.AddERCNativePointerProposal.description":
		return protoreflect.ValueOfString("")
	case "goeni.evm.AddERCNativePointerProposal.token":
		return protoreflect.ValueOfString("")
	case "goeni.evm.AddERCNativePointerProposal.pointer":
		return protoreflect.ValueOfString("")
	case "goeni.evm.AddERCNativePointerProposal.version":
		return protoreflect.ValueOfUint32(uint32(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goeni.evm.AddERCNativePointerProposal"))
		}
		panic(fmt.Errorf("message goeni.evm.AddERCNativePointerProposal does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_AddERCNativePointerProposal) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in goeni.evm.AddERCNativePointerProposal", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_AddERCNativePointerProposal) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AddERCNativePointerProposal) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_AddERCNativePointerProposal) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_AddERCNativePointerProposal) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*AddERCNativePointerProposal)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Title)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Description)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Token)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Pointer)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Version != 0 {
			n += 1 + runtime.Sov(uint64(x.Version))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*AddERCNativePointerProposal)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Version != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Version))
			i--
			dAtA[i] = 0x28
		}
		if len(x.Pointer) > 0 {
			i -= len(x.Pointer)
			copy(dAtA[i:], x.Pointer)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Pointer)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.Token) > 0 {
			i -= len(x.Token)
			copy(dAtA[i:], x.Token)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Token)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Description) > 0 {
			i -= len(x.Description)
			copy(dAtA[i:], x.Description)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Description)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Title) > 0 {
			i -= len(x.Title)
			copy(dAtA[i:], x.Title)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Title)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*AddERCNativePointerProposal)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: AddERCNativePointerProposal: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: AddERCNativePointerProposal: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Title = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Description = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Token", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Token = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Pointer", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Pointer = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Version", wireType)
				}
				x.Version = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Version |= uint32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_AddERCCW20PointerProposal             protoreflect.MessageDescriptor
	fd_AddERCCW20PointerProposal_title       protoreflect.FieldDescriptor
	fd_AddERCCW20PointerProposal_description protoreflect.FieldDescriptor
	fd_AddERCCW20PointerProposal_pointee     protoreflect.FieldDescriptor
	fd_AddERCCW20PointerProposal_pointer     protoreflect.FieldDescriptor
	fd_AddERCCW20PointerProposal_version     protoreflect.FieldDescriptor
)

func init() {
	file_goeni_evm_gov_proto_init()
	md_AddERCCW20PointerProposal = File_goeni_evm_gov_proto.Messages().ByName("AddERCCW20PointerProposal")
	fd_AddERCCW20PointerProposal_title = md_AddERCCW20PointerProposal.Fields().ByName("title")
	fd_AddERCCW20PointerProposal_description = md_AddERCCW20PointerProposal.Fields().ByName("description")
	fd_AddERCCW20PointerProposal_pointee = md_AddERCCW20PointerProposal.Fields().ByName("pointee")
	fd_AddERCCW20PointerProposal_pointer = md_AddERCCW20PointerProposal.Fields().ByName("pointer")
	fd_AddERCCW20PointerProposal_version = md_AddERCCW20PointerProposal.Fields().ByName("version")
}

var _ protoreflect.Message = (*fastReflection_AddERCCW20PointerProposal)(nil)

type fastReflection_AddERCCW20PointerProposal AddERCCW20PointerProposal

func (x *AddERCCW20PointerProposal) ProtoReflect() protoreflect.Message {
	return (*fastReflection_AddERCCW20PointerProposal)(x)
}

func (x *AddERCCW20PointerProposal) slowProtoReflect() protoreflect.Message {
	mi := &file_goeni_evm_gov_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_AddERCCW20PointerProposal_messageType fastReflection_AddERCCW20PointerProposal_messageType
var _ protoreflect.MessageType = fastReflection_AddERCCW20PointerProposal_messageType{}

type fastReflection_AddERCCW20PointerProposal_messageType struct{}

func (x fastReflection_AddERCCW20PointerProposal_messageType) Zero() protoreflect.Message {
	return (*fastReflection_AddERCCW20PointerProposal)(nil)
}
func (x fastReflection_AddERCCW20PointerProposal_messageType) New() protoreflect.Message {
	return new(fastReflection_AddERCCW20PointerProposal)
}
func (x fastReflection_AddERCCW20PointerProposal_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_AddERCCW20PointerProposal
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_AddERCCW20PointerProposal) Descriptor() protoreflect.MessageDescriptor {
	return md_AddERCCW20PointerProposal
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_AddERCCW20PointerProposal) Type() protoreflect.MessageType {
	return _fastReflection_AddERCCW20PointerProposal_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_AddERCCW20PointerProposal) New() protoreflect.Message {
	return new(fastReflection_AddERCCW20PointerProposal)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_AddERCCW20PointerProposal) Interface() protoreflect.ProtoMessage {
	return (*AddERCCW20PointerProposal)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_AddERCCW20PointerProposal) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Title != "" {
		value := protoreflect.ValueOfString(x.Title)
		if !f(fd_AddERCCW20PointerProposal_title, value) {
			return
		}
	}
	if x.Description != "" {
		value := protoreflect.ValueOfString(x.Description)
		if !f(fd_AddERCCW20PointerProposal_description, value) {
			return
		}
	}
	if x.Pointee != "" {
		value := protoreflect.ValueOfString(x.Pointee)
		if !f(fd_AddERCCW20PointerProposal_pointee, value) {
			return
		}
	}
	if x.Pointer != "" {
		value := protoreflect.ValueOfString(x.Pointer)
		if !f(fd_AddERCCW20PointerProposal_pointer, value) {
			return
		}
	}
	if x.Version != uint32(0) {
		value := protoreflect.ValueOfUint32(x.Version)
		if !f(fd_AddERCCW20PointerProposal_version, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_AddERCCW20PointerProposal) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "goeni.evm.AddERCCW20PointerProposal.title":
		return x.Title != ""
	case "goeni.evm.AddERCCW20PointerProposal.description":
		return x.Description != ""
	case "goeni.evm.AddERCCW20PointerProposal.pointee":
		return x.Pointee != ""
	case "goeni.evm.AddERCCW20PointerProposal.pointer":
		return x.Pointer != ""
	case "goeni.evm.AddERCCW20PointerProposal.version":
		return x.Version != uint32(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goeni.evm.AddERCCW20PointerProposal"))
		}
		panic(fmt.Errorf("message goeni.evm.AddERCCW20PointerProposal does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AddERCCW20PointerProposal) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "goeni.evm.AddERCCW20PointerProposal.title":
		x.Title = ""
	case "goeni.evm.AddERCCW20PointerProposal.description":
		x.Description = ""
	case "goeni.evm.AddERCCW20PointerProposal.pointee":
		x.Pointee = ""
	case "goeni.evm.AddERCCW20PointerProposal.pointer":
		x.Pointer = ""
	case "goeni.evm.AddERCCW20PointerProposal.version":
		x.Version = uint32(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goeni.evm.AddERCCW20PointerProposal"))
		}
		panic(fmt.Errorf("message goeni.evm.AddERCCW20PointerProposal does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_AddERCCW20PointerProposal) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "goeni.evm.AddERCCW20PointerProposal.title":
		value := x.Title
		return protoreflect.ValueOfString(value)
	case "goeni.evm.AddERCCW20PointerProposal.description":
		value := x.Description
		return protoreflect.ValueOfString(value)
	case "goeni.evm.AddERCCW20PointerProposal.pointee":
		value := x.Pointee
		return protoreflect.ValueOfString(value)
	case "goeni.evm.AddERCCW20PointerProposal.pointer":
		value := x.Pointer
		return protoreflect.ValueOfString(value)
	case "goeni.evm.AddERCCW20PointerProposal.version":
		value := x.Version
		return protoreflect.ValueOfUint32(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goeni.evm.AddERCCW20PointerProposal"))
		}
		panic(fmt.Errorf("message goeni.evm.AddERCCW20PointerProposal does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AddERCCW20PointerProposal) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "goeni.evm.AddERCCW20PointerProposal.title":
		x.Title = value.Interface().(string)
	case "goeni.evm.AddERCCW20PointerProposal.description":
		x.Description = value.Interface().(string)
	case "goeni.evm.AddERCCW20PointerProposal.pointee":
		x.Pointee = value.Interface().(string)
	case "goeni.evm.AddERCCW20PointerProposal.pointer":
		x.Pointer = value.Interface().(string)
	case "goeni.evm.AddERCCW20PointerProposal.version":
		x.Version = uint32(value.Uint())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goeni.evm.AddERCCW20PointerProposal"))
		}
		panic(fmt.Errorf("message goeni.evm.AddERCCW20PointerProposal does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AddERCCW20PointerProposal) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "goeni.evm.AddERCCW20PointerProposal.title":
		panic(fmt.Errorf("field title of message goeni.evm.AddERCCW20PointerProposal is not mutable"))
	case "goeni.evm.AddERCCW20PointerProposal.description":
		panic(fmt.Errorf("field description of message goeni.evm.AddERCCW20PointerProposal is not mutable"))
	case "goeni.evm.AddERCCW20PointerProposal.pointee":
		panic(fmt.Errorf("field pointee of message goeni.evm.AddERCCW20PointerProposal is not mutable"))
	case "goeni.evm.AddERCCW20PointerProposal.pointer":
		panic(fmt.Errorf("field pointer of message goeni.evm.AddERCCW20PointerProposal is not mutable"))
	case "goeni.evm.AddERCCW20PointerProposal.version":
		panic(fmt.Errorf("field version of message goeni.evm.AddERCCW20PointerProposal is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goeni.evm.AddERCCW20PointerProposal"))
		}
		panic(fmt.Errorf("message goeni.evm.AddERCCW20PointerProposal does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_AddERCCW20PointerProposal) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "goeni.evm.AddERCCW20PointerProposal.title":
		return protoreflect.ValueOfString("")
	case "goeni.evm.AddERCCW20PointerProposal.description":
		return protoreflect.ValueOfString("")
	case "goeni.evm.AddERCCW20PointerProposal.pointee":
		return protoreflect.ValueOfString("")
	case "goeni.evm.AddERCCW20PointerProposal.pointer":
		return protoreflect.ValueOfString("")
	case "goeni.evm.AddERCCW20PointerProposal.version":
		return protoreflect.ValueOfUint32(uint32(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goeni.evm.AddERCCW20PointerProposal"))
		}
		panic(fmt.Errorf("message goeni.evm.AddERCCW20PointerProposal does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_AddERCCW20PointerProposal) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in goeni.evm.AddERCCW20PointerProposal", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_AddERCCW20PointerProposal) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AddERCCW20PointerProposal) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_AddERCCW20PointerProposal) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_AddERCCW20PointerProposal) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*AddERCCW20PointerProposal)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Title)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Description)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Pointee)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Pointer)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Version != 0 {
			n += 1 + runtime.Sov(uint64(x.Version))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*AddERCCW20PointerProposal)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Version != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Version))
			i--
			dAtA[i] = 0x28
		}
		if len(x.Pointer) > 0 {
			i -= len(x.Pointer)
			copy(dAtA[i:], x.Pointer)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Pointer)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.Pointee) > 0 {
			i -= len(x.Pointee)
			copy(dAtA[i:], x.Pointee)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Pointee)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Description) > 0 {
			i -= len(x.Description)
			copy(dAtA[i:], x.Description)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Description)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Title) > 0 {
			i -= len(x.Title)
			copy(dAtA[i:], x.Title)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Title)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*AddERCCW20PointerProposal)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: AddERCCW20PointerProposal: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: AddERCCW20PointerProposal: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Title = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Description = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Pointee", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Pointee = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Pointer", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Pointer = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Version", wireType)
				}
				x.Version = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Version |= uint32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_AddERCCW721PointerProposal             protoreflect.MessageDescriptor
	fd_AddERCCW721PointerProposal_title       protoreflect.FieldDescriptor
	fd_AddERCCW721PointerProposal_description protoreflect.FieldDescriptor
	fd_AddERCCW721PointerProposal_pointee     protoreflect.FieldDescriptor
	fd_AddERCCW721PointerProposal_pointer     protoreflect.FieldDescriptor
	fd_AddERCCW721PointerProposal_version     protoreflect.FieldDescriptor
)

func init() {
	file_goeni_evm_gov_proto_init()
	md_AddERCCW721PointerProposal = File_goeni_evm_gov_proto.Messages().ByName("AddERCCW721PointerProposal")
	fd_AddERCCW721PointerProposal_title = md_AddERCCW721PointerProposal.Fields().ByName("title")
	fd_AddERCCW721PointerProposal_description = md_AddERCCW721PointerProposal.Fields().ByName("description")
	fd_AddERCCW721PointerProposal_pointee = md_AddERCCW721PointerProposal.Fields().ByName("pointee")
	fd_AddERCCW721PointerProposal_pointer = md_AddERCCW721PointerProposal.Fields().ByName("pointer")
	fd_AddERCCW721PointerProposal_version = md_AddERCCW721PointerProposal.Fields().ByName("version")
}

var _ protoreflect.Message = (*fastReflection_AddERCCW721PointerProposal)(nil)

type fastReflection_AddERCCW721PointerProposal AddERCCW721PointerProposal

func (x *AddERCCW721PointerProposal) ProtoReflect() protoreflect.Message {
	return (*fastReflection_AddERCCW721PointerProposal)(x)
}

func (x *AddERCCW721PointerProposal) slowProtoReflect() protoreflect.Message {
	mi := &file_goeni_evm_gov_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_AddERCCW721PointerProposal_messageType fastReflection_AddERCCW721PointerProposal_messageType
var _ protoreflect.MessageType = fastReflection_AddERCCW721PointerProposal_messageType{}

type fastReflection_AddERCCW721PointerProposal_messageType struct{}

func (x fastReflection_AddERCCW721PointerProposal_messageType) Zero() protoreflect.Message {
	return (*fastReflection_AddERCCW721PointerProposal)(nil)
}
func (x fastReflection_AddERCCW721PointerProposal_messageType) New() protoreflect.Message {
	return new(fastReflection_AddERCCW721PointerProposal)
}
func (x fastReflection_AddERCCW721PointerProposal_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_AddERCCW721PointerProposal
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_AddERCCW721PointerProposal) Descriptor() protoreflect.MessageDescriptor {
	return md_AddERCCW721PointerProposal
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_AddERCCW721PointerProposal) Type() protoreflect.MessageType {
	return _fastReflection_AddERCCW721PointerProposal_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_AddERCCW721PointerProposal) New() protoreflect.Message {
	return new(fastReflection_AddERCCW721PointerProposal)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_AddERCCW721PointerProposal) Interface() protoreflect.ProtoMessage {
	return (*AddERCCW721PointerProposal)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_AddERCCW721PointerProposal) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Title != "" {
		value := protoreflect.ValueOfString(x.Title)
		if !f(fd_AddERCCW721PointerProposal_title, value) {
			return
		}
	}
	if x.Description != "" {
		value := protoreflect.ValueOfString(x.Description)
		if !f(fd_AddERCCW721PointerProposal_description, value) {
			return
		}
	}
	if x.Pointee != "" {
		value := protoreflect.ValueOfString(x.Pointee)
		if !f(fd_AddERCCW721PointerProposal_pointee, value) {
			return
		}
	}
	if x.Pointer != "" {
		value := protoreflect.ValueOfString(x.Pointer)
		if !f(fd_AddERCCW721PointerProposal_pointer, value) {
			return
		}
	}
	if x.Version != uint32(0) {
		value := protoreflect.ValueOfUint32(x.Version)
		if !f(fd_AddERCCW721PointerProposal_version, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_AddERCCW721PointerProposal) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "goeni.evm.AddERCCW721PointerProposal.title":
		return x.Title != ""
	case "goeni.evm.AddERCCW721PointerProposal.description":
		return x.Description != ""
	case "goeni.evm.AddERCCW721PointerProposal.pointee":
		return x.Pointee != ""
	case "goeni.evm.AddERCCW721PointerProposal.pointer":
		return x.Pointer != ""
	case "goeni.evm.AddERCCW721PointerProposal.version":
		return x.Version != uint32(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goeni.evm.AddERCCW721PointerProposal"))
		}
		panic(fmt.Errorf("message goeni.evm.AddERCCW721PointerProposal does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AddERCCW721PointerProposal) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "goeni.evm.AddERCCW721PointerProposal.title":
		x.Title = ""
	case "goeni.evm.AddERCCW721PointerProposal.description":
		x.Description = ""
	case "goeni.evm.AddERCCW721PointerProposal.pointee":
		x.Pointee = ""
	case "goeni.evm.AddERCCW721PointerProposal.pointer":
		x.Pointer = ""
	case "goeni.evm.AddERCCW721PointerProposal.version":
		x.Version = uint32(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goeni.evm.AddERCCW721PointerProposal"))
		}
		panic(fmt.Errorf("message goeni.evm.AddERCCW721PointerProposal does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_AddERCCW721PointerProposal) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "goeni.evm.AddERCCW721PointerProposal.title":
		value := x.Title
		return protoreflect.ValueOfString(value)
	case "goeni.evm.AddERCCW721PointerProposal.description":
		value := x.Description
		return protoreflect.ValueOfString(value)
	case "goeni.evm.AddERCCW721PointerProposal.pointee":
		value := x.Pointee
		return protoreflect.ValueOfString(value)
	case "goeni.evm.AddERCCW721PointerProposal.pointer":
		value := x.Pointer
		return protoreflect.ValueOfString(value)
	case "goeni.evm.AddERCCW721PointerProposal.version":
		value := x.Version
		return protoreflect.ValueOfUint32(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goeni.evm.AddERCCW721PointerProposal"))
		}
		panic(fmt.Errorf("message goeni.evm.AddERCCW721PointerProposal does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AddERCCW721PointerProposal) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "goeni.evm.AddERCCW721PointerProposal.title":
		x.Title = value.Interface().(string)
	case "goeni.evm.AddERCCW721PointerProposal.description":
		x.Description = value.Interface().(string)
	case "goeni.evm.AddERCCW721PointerProposal.pointee":
		x.Pointee = value.Interface().(string)
	case "goeni.evm.AddERCCW721PointerProposal.pointer":
		x.Pointer = value.Interface().(string)
	case "goeni.evm.AddERCCW721PointerProposal.version":
		x.Version = uint32(value.Uint())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goeni.evm.AddERCCW721PointerProposal"))
		}
		panic(fmt.Errorf("message goeni.evm.AddERCCW721PointerProposal does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AddERCCW721PointerProposal) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "goeni.evm.AddERCCW721PointerProposal.title":
		panic(fmt.Errorf("field title of message goeni.evm.AddERCCW721PointerProposal is not mutable"))
	case "goeni.evm.AddERCCW721PointerProposal.description":
		panic(fmt.Errorf("field description of message goeni.evm.AddERCCW721PointerProposal is not mutable"))
	case "goeni.evm.AddERCCW721PointerProposal.pointee":
		panic(fmt.Errorf("field pointee of message goeni.evm.AddERCCW721PointerProposal is not mutable"))
	case "goeni.evm.AddERCCW721PointerProposal.pointer":
		panic(fmt.Errorf("field pointer of message goeni.evm.AddERCCW721PointerProposal is not mutable"))
	case "goeni.evm.AddERCCW721PointerProposal.version":
		panic(fmt.Errorf("field version of message goeni.evm.AddERCCW721PointerProposal is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goeni.evm.AddERCCW721PointerProposal"))
		}
		panic(fmt.Errorf("message goeni.evm.AddERCCW721PointerProposal does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_AddERCCW721PointerProposal) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "goeni.evm.AddERCCW721PointerProposal.title":
		return protoreflect.ValueOfString("")
	case "goeni.evm.AddERCCW721PointerProposal.description":
		return protoreflect.ValueOfString("")
	case "goeni.evm.AddERCCW721PointerProposal.pointee":
		return protoreflect.ValueOfString("")
	case "goeni.evm.AddERCCW721PointerProposal.pointer":
		return protoreflect.ValueOfString("")
	case "goeni.evm.AddERCCW721PointerProposal.version":
		return protoreflect.ValueOfUint32(uint32(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goeni.evm.AddERCCW721PointerProposal"))
		}
		panic(fmt.Errorf("message goeni.evm.AddERCCW721PointerProposal does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_AddERCCW721PointerProposal) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in goeni.evm.AddERCCW721PointerProposal", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_AddERCCW721PointerProposal) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AddERCCW721PointerProposal) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_AddERCCW721PointerProposal) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_AddERCCW721PointerProposal) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*AddERCCW721PointerProposal)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Title)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Description)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Pointee)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Pointer)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Version != 0 {
			n += 1 + runtime.Sov(uint64(x.Version))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*AddERCCW721PointerProposal)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Version != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Version))
			i--
			dAtA[i] = 0x28
		}
		if len(x.Pointer) > 0 {
			i -= len(x.Pointer)
			copy(dAtA[i:], x.Pointer)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Pointer)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.Pointee) > 0 {
			i -= len(x.Pointee)
			copy(dAtA[i:], x.Pointee)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Pointee)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Description) > 0 {
			i -= len(x.Description)
			copy(dAtA[i:], x.Description)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Description)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Title) > 0 {
			i -= len(x.Title)
			copy(dAtA[i:], x.Title)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Title)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*AddERCCW721PointerProposal)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: AddERCCW721PointerProposal: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: AddERCCW721PointerProposal: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Title = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Description = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Pointee", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Pointee = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Pointer", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Pointer = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Version", wireType)
				}
				x.Version = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Version |= uint32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_AddERCCW1155PointerProposal             protoreflect.MessageDescriptor
	fd_AddERCCW1155PointerProposal_title       protoreflect.FieldDescriptor
	fd_AddERCCW1155PointerProposal_description protoreflect.FieldDescriptor
	fd_AddERCCW1155PointerProposal_pointee     protoreflect.FieldDescriptor
	fd_AddERCCW1155PointerProposal_pointer     protoreflect.FieldDescriptor
	fd_AddERCCW1155PointerProposal_version     protoreflect.FieldDescriptor
)

func init() {
	file_goeni_evm_gov_proto_init()
	md_AddERCCW1155PointerProposal = File_goeni_evm_gov_proto.Messages().ByName("AddERCCW1155PointerProposal")
	fd_AddERCCW1155PointerProposal_title = md_AddERCCW1155PointerProposal.Fields().ByName("title")
	fd_AddERCCW1155PointerProposal_description = md_AddERCCW1155PointerProposal.Fields().ByName("description")
	fd_AddERCCW1155PointerProposal_pointee = md_AddERCCW1155PointerProposal.Fields().ByName("pointee")
	fd_AddERCCW1155PointerProposal_pointer = md_AddERCCW1155PointerProposal.Fields().ByName("pointer")
	fd_AddERCCW1155PointerProposal_version = md_AddERCCW1155PointerProposal.Fields().ByName("version")
}

var _ protoreflect.Message = (*fastReflection_AddERCCW1155PointerProposal)(nil)

type fastReflection_AddERCCW1155PointerProposal AddERCCW1155PointerProposal

func (x *AddERCCW1155PointerProposal) ProtoReflect() protoreflect.Message {
	return (*fastReflection_AddERCCW1155PointerProposal)(x)
}

func (x *AddERCCW1155PointerProposal) slowProtoReflect() protoreflect.Message {
	mi := &file_goeni_evm_gov_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_AddERCCW1155PointerProposal_messageType fastReflection_AddERCCW1155PointerProposal_messageType
var _ protoreflect.MessageType = fastReflection_AddERCCW1155PointerProposal_messageType{}

type fastReflection_AddERCCW1155PointerProposal_messageType struct{}

func (x fastReflection_AddERCCW1155PointerProposal_messageType) Zero() protoreflect.Message {
	return (*fastReflection_AddERCCW1155PointerProposal)(nil)
}
func (x fastReflection_AddERCCW1155PointerProposal_messageType) New() protoreflect.Message {
	return new(fastReflection_AddERCCW1155PointerProposal)
}
func (x fastReflection_AddERCCW1155PointerProposal_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_AddERCCW1155PointerProposal
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_AddERCCW1155PointerProposal) Descriptor() protoreflect.MessageDescriptor {
	return md_AddERCCW1155PointerProposal
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_AddERCCW1155PointerProposal) Type() protoreflect.MessageType {
	return _fastReflection_AddERCCW1155PointerProposal_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_AddERCCW1155PointerProposal) New() protoreflect.Message {
	return new(fastReflection_AddERCCW1155PointerProposal)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_AddERCCW1155PointerProposal) Interface() protoreflect.ProtoMessage {
	return (*AddERCCW1155PointerProposal)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_AddERCCW1155PointerProposal) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Title != "" {
		value := protoreflect.ValueOfString(x.Title)
		if !f(fd_AddERCCW1155PointerProposal_title, value) {
			return
		}
	}
	if x.Description != "" {
		value := protoreflect.ValueOfString(x.Description)
		if !f(fd_AddERCCW1155PointerProposal_description, value) {
			return
		}
	}
	if x.Pointee != "" {
		value := protoreflect.ValueOfString(x.Pointee)
		if !f(fd_AddERCCW1155PointerProposal_pointee, value) {
			return
		}
	}
	if x.Pointer != "" {
		value := protoreflect.ValueOfString(x.Pointer)
		if !f(fd_AddERCCW1155PointerProposal_pointer, value) {
			return
		}
	}
	if x.Version != uint32(0) {
		value := protoreflect.ValueOfUint32(x.Version)
		if !f(fd_AddERCCW1155PointerProposal_version, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_AddERCCW1155PointerProposal) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "goeni.evm.AddERCCW1155PointerProposal.title":
		return x.Title != ""
	case "goeni.evm.AddERCCW1155PointerProposal.description":
		return x.Description != ""
	case "goeni.evm.AddERCCW1155PointerProposal.pointee":
		return x.Pointee != ""
	case "goeni.evm.AddERCCW1155PointerProposal.pointer":
		return x.Pointer != ""
	case "goeni.evm.AddERCCW1155PointerProposal.version":
		return x.Version != uint32(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goeni.evm.AddERCCW1155PointerProposal"))
		}
		panic(fmt.Errorf("message goeni.evm.AddERCCW1155PointerProposal does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AddERCCW1155PointerProposal) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "goeni.evm.AddERCCW1155PointerProposal.title":
		x.Title = ""
	case "goeni.evm.AddERCCW1155PointerProposal.description":
		x.Description = ""
	case "goeni.evm.AddERCCW1155PointerProposal.pointee":
		x.Pointee = ""
	case "goeni.evm.AddERCCW1155PointerProposal.pointer":
		x.Pointer = ""
	case "goeni.evm.AddERCCW1155PointerProposal.version":
		x.Version = uint32(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goeni.evm.AddERCCW1155PointerProposal"))
		}
		panic(fmt.Errorf("message goeni.evm.AddERCCW1155PointerProposal does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_AddERCCW1155PointerProposal) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "goeni.evm.AddERCCW1155PointerProposal.title":
		value := x.Title
		return protoreflect.ValueOfString(value)
	case "goeni.evm.AddERCCW1155PointerProposal.description":
		value := x.Description
		return protoreflect.ValueOfString(value)
	case "goeni.evm.AddERCCW1155PointerProposal.pointee":
		value := x.Pointee
		return protoreflect.ValueOfString(value)
	case "goeni.evm.AddERCCW1155PointerProposal.pointer":
		value := x.Pointer
		return protoreflect.ValueOfString(value)
	case "goeni.evm.AddERCCW1155PointerProposal.version":
		value := x.Version
		return protoreflect.ValueOfUint32(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goeni.evm.AddERCCW1155PointerProposal"))
		}
		panic(fmt.Errorf("message goeni.evm.AddERCCW1155PointerProposal does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AddERCCW1155PointerProposal) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "goeni.evm.AddERCCW1155PointerProposal.title":
		x.Title = value.Interface().(string)
	case "goeni.evm.AddERCCW1155PointerProposal.description":
		x.Description = value.Interface().(string)
	case "goeni.evm.AddERCCW1155PointerProposal.pointee":
		x.Pointee = value.Interface().(string)
	case "goeni.evm.AddERCCW1155PointerProposal.pointer":
		x.Pointer = value.Interface().(string)
	case "goeni.evm.AddERCCW1155PointerProposal.version":
		x.Version = uint32(value.Uint())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goeni.evm.AddERCCW1155PointerProposal"))
		}
		panic(fmt.Errorf("message goeni.evm.AddERCCW1155PointerProposal does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AddERCCW1155PointerProposal) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "goeni.evm.AddERCCW1155PointerProposal.title":
		panic(fmt.Errorf("field title of message goeni.evm.AddERCCW1155PointerProposal is not mutable"))
	case "goeni.evm.AddERCCW1155PointerProposal.description":
		panic(fmt.Errorf("field description of message goeni.evm.AddERCCW1155PointerProposal is not mutable"))
	case "goeni.evm.AddERCCW1155PointerProposal.pointee":
		panic(fmt.Errorf("field pointee of message goeni.evm.AddERCCW1155PointerProposal is not mutable"))
	case "goeni.evm.AddERCCW1155PointerProposal.pointer":
		panic(fmt.Errorf("field pointer of message goeni.evm.AddERCCW1155PointerProposal is not mutable"))
	case "goeni.evm.AddERCCW1155PointerProposal.version":
		panic(fmt.Errorf("field version of message goeni.evm.AddERCCW1155PointerProposal is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goeni.evm.AddERCCW1155PointerProposal"))
		}
		panic(fmt.Errorf("message goeni.evm.AddERCCW1155PointerProposal does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_AddERCCW1155PointerProposal) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "goeni.evm.AddERCCW1155PointerProposal.title":
		return protoreflect.ValueOfString("")
	case "goeni.evm.AddERCCW1155PointerProposal.description":
		return protoreflect.ValueOfString("")
	case "goeni.evm.AddERCCW1155PointerProposal.pointee":
		return protoreflect.ValueOfString("")
	case "goeni.evm.AddERCCW1155PointerProposal.pointer":
		return protoreflect.ValueOfString("")
	case "goeni.evm.AddERCCW1155PointerProposal.version":
		return protoreflect.ValueOfUint32(uint32(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goeni.evm.AddERCCW1155PointerProposal"))
		}
		panic(fmt.Errorf("message goeni.evm.AddERCCW1155PointerProposal does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_AddERCCW1155PointerProposal) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in goeni.evm.AddERCCW1155PointerProposal", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_AddERCCW1155PointerProposal) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AddERCCW1155PointerProposal) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_AddERCCW1155PointerProposal) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_AddERCCW1155PointerProposal) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*AddERCCW1155PointerProposal)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Title)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Description)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Pointee)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Pointer)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Version != 0 {
			n += 1 + runtime.Sov(uint64(x.Version))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*AddERCCW1155PointerProposal)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Version != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Version))
			i--
			dAtA[i] = 0x28
		}
		if len(x.Pointer) > 0 {
			i -= len(x.Pointer)
			copy(dAtA[i:], x.Pointer)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Pointer)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.Pointee) > 0 {
			i -= len(x.Pointee)
			copy(dAtA[i:], x.Pointee)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Pointee)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Description) > 0 {
			i -= len(x.Description)
			copy(dAtA[i:], x.Description)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Description)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Title) > 0 {
			i -= len(x.Title)
			copy(dAtA[i:], x.Title)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Title)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*AddERCCW1155PointerProposal)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: AddERCCW1155PointerProposal: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: AddERCCW1155PointerProposal: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Title = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Description = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Pointee", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Pointee = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Pointer", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Pointer = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Version", wireType)
				}
				x.Version = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Version |= uint32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_AddCWERC20PointerProposal             protoreflect.MessageDescriptor
	fd_AddCWERC20PointerProposal_title       protoreflect.FieldDescriptor
	fd_AddCWERC20PointerProposal_description protoreflect.FieldDescriptor
	fd_AddCWERC20PointerProposal_pointee     protoreflect.FieldDescriptor
	fd_AddCWERC20PointerProposal_pointer     protoreflect.FieldDescriptor
	fd_AddCWERC20PointerProposal_version     protoreflect.FieldDescriptor
)

func init() {
	file_goeni_evm_gov_proto_init()
	md_AddCWERC20PointerProposal = File_goeni_evm_gov_proto.Messages().ByName("AddCWERC20PointerProposal")
	fd_AddCWERC20PointerProposal_title = md_AddCWERC20PointerProposal.Fields().ByName("title")
	fd_AddCWERC20PointerProposal_description = md_AddCWERC20PointerProposal.Fields().ByName("description")
	fd_AddCWERC20PointerProposal_pointee = md_AddCWERC20PointerProposal.Fields().ByName("pointee")
	fd_AddCWERC20PointerProposal_pointer = md_AddCWERC20PointerProposal.Fields().ByName("pointer")
	fd_AddCWERC20PointerProposal_version = md_AddCWERC20PointerProposal.Fields().ByName("version")
}

var _ protoreflect.Message = (*fastReflection_AddCWERC20PointerProposal)(nil)

type fastReflection_AddCWERC20PointerProposal AddCWERC20PointerProposal

func (x *AddCWERC20PointerProposal) ProtoReflect() protoreflect.Message {
	return (*fastReflection_AddCWERC20PointerProposal)(x)
}

func (x *AddCWERC20PointerProposal) slowProtoReflect() protoreflect.Message {
	mi := &file_goeni_evm_gov_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_AddCWERC20PointerProposal_messageType fastReflection_AddCWERC20PointerProposal_messageType
var _ protoreflect.MessageType = fastReflection_AddCWERC20PointerProposal_messageType{}

type fastReflection_AddCWERC20PointerProposal_messageType struct{}

func (x fastReflection_AddCWERC20PointerProposal_messageType) Zero() protoreflect.Message {
	return (*fastReflection_AddCWERC20PointerProposal)(nil)
}
func (x fastReflection_AddCWERC20PointerProposal_messageType) New() protoreflect.Message {
	return new(fastReflection_AddCWERC20PointerProposal)
}
func (x fastReflection_AddCWERC20PointerProposal_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_AddCWERC20PointerProposal
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_AddCWERC20PointerProposal) Descriptor() protoreflect.MessageDescriptor {
	return md_AddCWERC20PointerProposal
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_AddCWERC20PointerProposal) Type() protoreflect.MessageType {
	return _fastReflection_AddCWERC20PointerProposal_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_AddCWERC20PointerProposal) New() protoreflect.Message {
	return new(fastReflection_AddCWERC20PointerProposal)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_AddCWERC20PointerProposal) Interface() protoreflect.ProtoMessage {
	return (*AddCWERC20PointerProposal)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_AddCWERC20PointerProposal) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Title != "" {
		value := protoreflect.ValueOfString(x.Title)
		if !f(fd_AddCWERC20PointerProposal_title, value) {
			return
		}
	}
	if x.Description != "" {
		value := protoreflect.ValueOfString(x.Description)
		if !f(fd_AddCWERC20PointerProposal_description, value) {
			return
		}
	}
	if x.Pointee != "" {
		value := protoreflect.ValueOfString(x.Pointee)
		if !f(fd_AddCWERC20PointerProposal_pointee, value) {
			return
		}
	}
	if x.Pointer != "" {
		value := protoreflect.ValueOfString(x.Pointer)
		if !f(fd_AddCWERC20PointerProposal_pointer, value) {
			return
		}
	}
	if x.Version != uint32(0) {
		value := protoreflect.ValueOfUint32(x.Version)
		if !f(fd_AddCWERC20PointerProposal_version, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_AddCWERC20PointerProposal) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "goeni.evm.AddCWERC20PointerProposal.title":
		return x.Title != ""
	case "goeni.evm.AddCWERC20PointerProposal.description":
		return x.Description != ""
	case "goeni.evm.AddCWERC20PointerProposal.pointee":
		return x.Pointee != ""
	case "goeni.evm.AddCWERC20PointerProposal.pointer":
		return x.Pointer != ""
	case "goeni.evm.AddCWERC20PointerProposal.version":
		return x.Version != uint32(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goeni.evm.AddCWERC20PointerProposal"))
		}
		panic(fmt.Errorf("message goeni.evm.AddCWERC20PointerProposal does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AddCWERC20PointerProposal) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "goeni.evm.AddCWERC20PointerProposal.title":
		x.Title = ""
	case "goeni.evm.AddCWERC20PointerProposal.description":
		x.Description = ""
	case "goeni.evm.AddCWERC20PointerProposal.pointee":
		x.Pointee = ""
	case "goeni.evm.AddCWERC20PointerProposal.pointer":
		x.Pointer = ""
	case "goeni.evm.AddCWERC20PointerProposal.version":
		x.Version = uint32(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goeni.evm.AddCWERC20PointerProposal"))
		}
		panic(fmt.Errorf("message goeni.evm.AddCWERC20PointerProposal does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_AddCWERC20PointerProposal) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "goeni.evm.AddCWERC20PointerProposal.title":
		value := x.Title
		return protoreflect.ValueOfString(value)
	case "goeni.evm.AddCWERC20PointerProposal.description":
		value := x.Description
		return protoreflect.ValueOfString(value)
	case "goeni.evm.AddCWERC20PointerProposal.pointee":
		value := x.Pointee
		return protoreflect.ValueOfString(value)
	case "goeni.evm.AddCWERC20PointerProposal.pointer":
		value := x.Pointer
		return protoreflect.ValueOfString(value)
	case "goeni.evm.AddCWERC20PointerProposal.version":
		value := x.Version
		return protoreflect.ValueOfUint32(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goeni.evm.AddCWERC20PointerProposal"))
		}
		panic(fmt.Errorf("message goeni.evm.AddCWERC20PointerProposal does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AddCWERC20PointerProposal) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "goeni.evm.AddCWERC20PointerProposal.title":
		x.Title = value.Interface().(string)
	case "goeni.evm.AddCWERC20PointerProposal.description":
		x.Description = value.Interface().(string)
	case "goeni.evm.AddCWERC20PointerProposal.pointee":
		x.Pointee = value.Interface().(string)
	case "goeni.evm.AddCWERC20PointerProposal.pointer":
		x.Pointer = value.Interface().(string)
	case "goeni.evm.AddCWERC20PointerProposal.version":
		x.Version = uint32(value.Uint())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goeni.evm.AddCWERC20PointerProposal"))
		}
		panic(fmt.Errorf("message goeni.evm.AddCWERC20PointerProposal does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AddCWERC20PointerProposal) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "goeni.evm.AddCWERC20PointerProposal.title":
		panic(fmt.Errorf("field title of message goeni.evm.AddCWERC20PointerProposal is not mutable"))
	case "goeni.evm.AddCWERC20PointerProposal.description":
		panic(fmt.Errorf("field description of message goeni.evm.AddCWERC20PointerProposal is not mutable"))
	case "goeni.evm.AddCWERC20PointerProposal.pointee":
		panic(fmt.Errorf("field pointee of message goeni.evm.AddCWERC20PointerProposal is not mutable"))
	case "goeni.evm.AddCWERC20PointerProposal.pointer":
		panic(fmt.Errorf("field pointer of message goeni.evm.AddCWERC20PointerProposal is not mutable"))
	case "goeni.evm.AddCWERC20PointerProposal.version":
		panic(fmt.Errorf("field version of message goeni.evm.AddCWERC20PointerProposal is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goeni.evm.AddCWERC20PointerProposal"))
		}
		panic(fmt.Errorf("message goeni.evm.AddCWERC20PointerProposal does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_AddCWERC20PointerProposal) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "goeni.evm.AddCWERC20PointerProposal.title":
		return protoreflect.ValueOfString("")
	case "goeni.evm.AddCWERC20PointerProposal.description":
		return protoreflect.ValueOfString("")
	case "goeni.evm.AddCWERC20PointerProposal.pointee":
		return protoreflect.ValueOfString("")
	case "goeni.evm.AddCWERC20PointerProposal.pointer":
		return protoreflect.ValueOfString("")
	case "goeni.evm.AddCWERC20PointerProposal.version":
		return protoreflect.ValueOfUint32(uint32(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goeni.evm.AddCWERC20PointerProposal"))
		}
		panic(fmt.Errorf("message goeni.evm.AddCWERC20PointerProposal does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_AddCWERC20PointerProposal) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in goeni.evm.AddCWERC20PointerProposal", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_AddCWERC20PointerProposal) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AddCWERC20PointerProposal) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_AddCWERC20PointerProposal) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_AddCWERC20PointerProposal) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*AddCWERC20PointerProposal)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Title)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Description)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Pointee)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Pointer)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Version != 0 {
			n += 1 + runtime.Sov(uint64(x.Version))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*AddCWERC20PointerProposal)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Version != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Version))
			i--
			dAtA[i] = 0x28
		}
		if len(x.Pointer) > 0 {
			i -= len(x.Pointer)
			copy(dAtA[i:], x.Pointer)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Pointer)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.Pointee) > 0 {
			i -= len(x.Pointee)
			copy(dAtA[i:], x.Pointee)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Pointee)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Description) > 0 {
			i -= len(x.Description)
			copy(dAtA[i:], x.Description)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Description)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Title) > 0 {
			i -= len(x.Title)
			copy(dAtA[i:], x.Title)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Title)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*AddCWERC20PointerProposal)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: AddCWERC20PointerProposal: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: AddCWERC20PointerProposal: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Title = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Description = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Pointee", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Pointee = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Pointer", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Pointer = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Version", wireType)
				}
				x.Version = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Version |= uint32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_AddCWERC721PointerProposal             protoreflect.MessageDescriptor
	fd_AddCWERC721PointerProposal_title       protoreflect.FieldDescriptor
	fd_AddCWERC721PointerProposal_description protoreflect.FieldDescriptor
	fd_AddCWERC721PointerProposal_pointee     protoreflect.FieldDescriptor
	fd_AddCWERC721PointerProposal_pointer     protoreflect.FieldDescriptor
	fd_AddCWERC721PointerProposal_version     protoreflect.FieldDescriptor
)

func init() {
	file_goeni_evm_gov_proto_init()
	md_AddCWERC721PointerProposal = File_goeni_evm_gov_proto.Messages().ByName("AddCWERC721PointerProposal")
	fd_AddCWERC721PointerProposal_title = md_AddCWERC721PointerProposal.Fields().ByName("title")
	fd_AddCWERC721PointerProposal_description = md_AddCWERC721PointerProposal.Fields().ByName("description")
	fd_AddCWERC721PointerProposal_pointee = md_AddCWERC721PointerProposal.Fields().ByName("pointee")
	fd_AddCWERC721PointerProposal_pointer = md_AddCWERC721PointerProposal.Fields().ByName("pointer")
	fd_AddCWERC721PointerProposal_version = md_AddCWERC721PointerProposal.Fields().ByName("version")
}

var _ protoreflect.Message = (*fastReflection_AddCWERC721PointerProposal)(nil)

type fastReflection_AddCWERC721PointerProposal AddCWERC721PointerProposal

func (x *AddCWERC721PointerProposal) ProtoReflect() protoreflect.Message {
	return (*fastReflection_AddCWERC721PointerProposal)(x)
}

func (x *AddCWERC721PointerProposal) slowProtoReflect() protoreflect.Message {
	mi := &file_goeni_evm_gov_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_AddCWERC721PointerProposal_messageType fastReflection_AddCWERC721PointerProposal_messageType
var _ protoreflect.MessageType = fastReflection_AddCWERC721PointerProposal_messageType{}

type fastReflection_AddCWERC721PointerProposal_messageType struct{}

func (x fastReflection_AddCWERC721PointerProposal_messageType) Zero() protoreflect.Message {
	return (*fastReflection_AddCWERC721PointerProposal)(nil)
}
func (x fastReflection_AddCWERC721PointerProposal_messageType) New() protoreflect.Message {
	return new(fastReflection_AddCWERC721PointerProposal)
}
func (x fastReflection_AddCWERC721PointerProposal_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_AddCWERC721PointerProposal
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_AddCWERC721PointerProposal) Descriptor() protoreflect.MessageDescriptor {
	return md_AddCWERC721PointerProposal
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_AddCWERC721PointerProposal) Type() protoreflect.MessageType {
	return _fastReflection_AddCWERC721PointerProposal_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_AddCWERC721PointerProposal) New() protoreflect.Message {
	return new(fastReflection_AddCWERC721PointerProposal)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_AddCWERC721PointerProposal) Interface() protoreflect.ProtoMessage {
	return (*AddCWERC721PointerProposal)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_AddCWERC721PointerProposal) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Title != "" {
		value := protoreflect.ValueOfString(x.Title)
		if !f(fd_AddCWERC721PointerProposal_title, value) {
			return
		}
	}
	if x.Description != "" {
		value := protoreflect.ValueOfString(x.Description)
		if !f(fd_AddCWERC721PointerProposal_description, value) {
			return
		}
	}
	if x.Pointee != "" {
		value := protoreflect.ValueOfString(x.Pointee)
		if !f(fd_AddCWERC721PointerProposal_pointee, value) {
			return
		}
	}
	if x.Pointer != "" {
		value := protoreflect.ValueOfString(x.Pointer)
		if !f(fd_AddCWERC721PointerProposal_pointer, value) {
			return
		}
	}
	if x.Version != uint32(0) {
		value := protoreflect.ValueOfUint32(x.Version)
		if !f(fd_AddCWERC721PointerProposal_version, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_AddCWERC721PointerProposal) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "goeni.evm.AddCWERC721PointerProposal.title":
		return x.Title != ""
	case "goeni.evm.AddCWERC721PointerProposal.description":
		return x.Description != ""
	case "goeni.evm.AddCWERC721PointerProposal.pointee":
		return x.Pointee != ""
	case "goeni.evm.AddCWERC721PointerProposal.pointer":
		return x.Pointer != ""
	case "goeni.evm.AddCWERC721PointerProposal.version":
		return x.Version != uint32(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goeni.evm.AddCWERC721PointerProposal"))
		}
		panic(fmt.Errorf("message goeni.evm.AddCWERC721PointerProposal does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AddCWERC721PointerProposal) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "goeni.evm.AddCWERC721PointerProposal.title":
		x.Title = ""
	case "goeni.evm.AddCWERC721PointerProposal.description":
		x.Description = ""
	case "goeni.evm.AddCWERC721PointerProposal.pointee":
		x.Pointee = ""
	case "goeni.evm.AddCWERC721PointerProposal.pointer":
		x.Pointer = ""
	case "goeni.evm.AddCWERC721PointerProposal.version":
		x.Version = uint32(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goeni.evm.AddCWERC721PointerProposal"))
		}
		panic(fmt.Errorf("message goeni.evm.AddCWERC721PointerProposal does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_AddCWERC721PointerProposal) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "goeni.evm.AddCWERC721PointerProposal.title":
		value := x.Title
		return protoreflect.ValueOfString(value)
	case "goeni.evm.AddCWERC721PointerProposal.description":
		value := x.Description
		return protoreflect.ValueOfString(value)
	case "goeni.evm.AddCWERC721PointerProposal.pointee":
		value := x.Pointee
		return protoreflect.ValueOfString(value)
	case "goeni.evm.AddCWERC721PointerProposal.pointer":
		value := x.Pointer
		return protoreflect.ValueOfString(value)
	case "goeni.evm.AddCWERC721PointerProposal.version":
		value := x.Version
		return protoreflect.ValueOfUint32(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goeni.evm.AddCWERC721PointerProposal"))
		}
		panic(fmt.Errorf("message goeni.evm.AddCWERC721PointerProposal does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AddCWERC721PointerProposal) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "goeni.evm.AddCWERC721PointerProposal.title":
		x.Title = value.Interface().(string)
	case "goeni.evm.AddCWERC721PointerProposal.description":
		x.Description = value.Interface().(string)
	case "goeni.evm.AddCWERC721PointerProposal.pointee":
		x.Pointee = value.Interface().(string)
	case "goeni.evm.AddCWERC721PointerProposal.pointer":
		x.Pointer = value.Interface().(string)
	case "goeni.evm.AddCWERC721PointerProposal.version":
		x.Version = uint32(value.Uint())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goeni.evm.AddCWERC721PointerProposal"))
		}
		panic(fmt.Errorf("message goeni.evm.AddCWERC721PointerProposal does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AddCWERC721PointerProposal) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "goeni.evm.AddCWERC721PointerProposal.title":
		panic(fmt.Errorf("field title of message goeni.evm.AddCWERC721PointerProposal is not mutable"))
	case "goeni.evm.AddCWERC721PointerProposal.description":
		panic(fmt.Errorf("field description of message goeni.evm.AddCWERC721PointerProposal is not mutable"))
	case "goeni.evm.AddCWERC721PointerProposal.pointee":
		panic(fmt.Errorf("field pointee of message goeni.evm.AddCWERC721PointerProposal is not mutable"))
	case "goeni.evm.AddCWERC721PointerProposal.pointer":
		panic(fmt.Errorf("field pointer of message goeni.evm.AddCWERC721PointerProposal is not mutable"))
	case "goeni.evm.AddCWERC721PointerProposal.version":
		panic(fmt.Errorf("field version of message goeni.evm.AddCWERC721PointerProposal is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goeni.evm.AddCWERC721PointerProposal"))
		}
		panic(fmt.Errorf("message goeni.evm.AddCWERC721PointerProposal does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_AddCWERC721PointerProposal) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "goeni.evm.AddCWERC721PointerProposal.title":
		return protoreflect.ValueOfString("")
	case "goeni.evm.AddCWERC721PointerProposal.description":
		return protoreflect.ValueOfString("")
	case "goeni.evm.AddCWERC721PointerProposal.pointee":
		return protoreflect.ValueOfString("")
	case "goeni.evm.AddCWERC721PointerProposal.pointer":
		return protoreflect.ValueOfString("")
	case "goeni.evm.AddCWERC721PointerProposal.version":
		return protoreflect.ValueOfUint32(uint32(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goeni.evm.AddCWERC721PointerProposal"))
		}
		panic(fmt.Errorf("message goeni.evm.AddCWERC721PointerProposal does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_AddCWERC721PointerProposal) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in goeni.evm.AddCWERC721PointerProposal", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_AddCWERC721PointerProposal) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AddCWERC721PointerProposal) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_AddCWERC721PointerProposal) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_AddCWERC721PointerProposal) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*AddCWERC721PointerProposal)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Title)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Description)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Pointee)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Pointer)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Version != 0 {
			n += 1 + runtime.Sov(uint64(x.Version))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*AddCWERC721PointerProposal)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Version != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Version))
			i--
			dAtA[i] = 0x28
		}
		if len(x.Pointer) > 0 {
			i -= len(x.Pointer)
			copy(dAtA[i:], x.Pointer)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Pointer)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.Pointee) > 0 {
			i -= len(x.Pointee)
			copy(dAtA[i:], x.Pointee)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Pointee)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Description) > 0 {
			i -= len(x.Description)
			copy(dAtA[i:], x.Description)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Description)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Title) > 0 {
			i -= len(x.Title)
			copy(dAtA[i:], x.Title)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Title)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*AddCWERC721PointerProposal)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: AddCWERC721PointerProposal: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: AddCWERC721PointerProposal: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Title = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Description = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Pointee", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Pointee = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Pointer", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Pointer = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Version", wireType)
				}
				x.Version = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Version |= uint32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_AddCWERC1155PointerProposal             protoreflect.MessageDescriptor
	fd_AddCWERC1155PointerProposal_title       protoreflect.FieldDescriptor
	fd_AddCWERC1155PointerProposal_description protoreflect.FieldDescriptor
	fd_AddCWERC1155PointerProposal_pointee     protoreflect.FieldDescriptor
	fd_AddCWERC1155PointerProposal_pointer     protoreflect.FieldDescriptor
	fd_AddCWERC1155PointerProposal_version     protoreflect.FieldDescriptor
)

func init() {
	file_goeni_evm_gov_proto_init()
	md_AddCWERC1155PointerProposal = File_goeni_evm_gov_proto.Messages().ByName("AddCWERC1155PointerProposal")
	fd_AddCWERC1155PointerProposal_title = md_AddCWERC1155PointerProposal.Fields().ByName("title")
	fd_AddCWERC1155PointerProposal_description = md_AddCWERC1155PointerProposal.Fields().ByName("description")
	fd_AddCWERC1155PointerProposal_pointee = md_AddCWERC1155PointerProposal.Fields().ByName("pointee")
	fd_AddCWERC1155PointerProposal_pointer = md_AddCWERC1155PointerProposal.Fields().ByName("pointer")
	fd_AddCWERC1155PointerProposal_version = md_AddCWERC1155PointerProposal.Fields().ByName("version")
}

var _ protoreflect.Message = (*fastReflection_AddCWERC1155PointerProposal)(nil)

type fastReflection_AddCWERC1155PointerProposal AddCWERC1155PointerProposal

func (x *AddCWERC1155PointerProposal) ProtoReflect() protoreflect.Message {
	return (*fastReflection_AddCWERC1155PointerProposal)(x)
}

func (x *AddCWERC1155PointerProposal) slowProtoReflect() protoreflect.Message {
	mi := &file_goeni_evm_gov_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_AddCWERC1155PointerProposal_messageType fastReflection_AddCWERC1155PointerProposal_messageType
var _ protoreflect.MessageType = fastReflection_AddCWERC1155PointerProposal_messageType{}

type fastReflection_AddCWERC1155PointerProposal_messageType struct{}

func (x fastReflection_AddCWERC1155PointerProposal_messageType) Zero() protoreflect.Message {
	return (*fastReflection_AddCWERC1155PointerProposal)(nil)
}
func (x fastReflection_AddCWERC1155PointerProposal_messageType) New() protoreflect.Message {
	return new(fastReflection_AddCWERC1155PointerProposal)
}
func (x fastReflection_AddCWERC1155PointerProposal_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_AddCWERC1155PointerProposal
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_AddCWERC1155PointerProposal) Descriptor() protoreflect.MessageDescriptor {
	return md_AddCWERC1155PointerProposal
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_AddCWERC1155PointerProposal) Type() protoreflect.MessageType {
	return _fastReflection_AddCWERC1155PointerProposal_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_AddCWERC1155PointerProposal) New() protoreflect.Message {
	return new(fastReflection_AddCWERC1155PointerProposal)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_AddCWERC1155PointerProposal) Interface() protoreflect.ProtoMessage {
	return (*AddCWERC1155PointerProposal)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_AddCWERC1155PointerProposal) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Title != "" {
		value := protoreflect.ValueOfString(x.Title)
		if !f(fd_AddCWERC1155PointerProposal_title, value) {
			return
		}
	}
	if x.Description != "" {
		value := protoreflect.ValueOfString(x.Description)
		if !f(fd_AddCWERC1155PointerProposal_description, value) {
			return
		}
	}
	if x.Pointee != "" {
		value := protoreflect.ValueOfString(x.Pointee)
		if !f(fd_AddCWERC1155PointerProposal_pointee, value) {
			return
		}
	}
	if x.Pointer != "" {
		value := protoreflect.ValueOfString(x.Pointer)
		if !f(fd_AddCWERC1155PointerProposal_pointer, value) {
			return
		}
	}
	if x.Version != uint32(0) {
		value := protoreflect.ValueOfUint32(x.Version)
		if !f(fd_AddCWERC1155PointerProposal_version, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_AddCWERC1155PointerProposal) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "goeni.evm.AddCWERC1155PointerProposal.title":
		return x.Title != ""
	case "goeni.evm.AddCWERC1155PointerProposal.description":
		return x.Description != ""
	case "goeni.evm.AddCWERC1155PointerProposal.pointee":
		return x.Pointee != ""
	case "goeni.evm.AddCWERC1155PointerProposal.pointer":
		return x.Pointer != ""
	case "goeni.evm.AddCWERC1155PointerProposal.version":
		return x.Version != uint32(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goeni.evm.AddCWERC1155PointerProposal"))
		}
		panic(fmt.Errorf("message goeni.evm.AddCWERC1155PointerProposal does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AddCWERC1155PointerProposal) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "goeni.evm.AddCWERC1155PointerProposal.title":
		x.Title = ""
	case "goeni.evm.AddCWERC1155PointerProposal.description":
		x.Description = ""
	case "goeni.evm.AddCWERC1155PointerProposal.pointee":
		x.Pointee = ""
	case "goeni.evm.AddCWERC1155PointerProposal.pointer":
		x.Pointer = ""
	case "goeni.evm.AddCWERC1155PointerProposal.version":
		x.Version = uint32(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goeni.evm.AddCWERC1155PointerProposal"))
		}
		panic(fmt.Errorf("message goeni.evm.AddCWERC1155PointerProposal does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_AddCWERC1155PointerProposal) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "goeni.evm.AddCWERC1155PointerProposal.title":
		value := x.Title
		return protoreflect.ValueOfString(value)
	case "goeni.evm.AddCWERC1155PointerProposal.description":
		value := x.Description
		return protoreflect.ValueOfString(value)
	case "goeni.evm.AddCWERC1155PointerProposal.pointee":
		value := x.Pointee
		return protoreflect.ValueOfString(value)
	case "goeni.evm.AddCWERC1155PointerProposal.pointer":
		value := x.Pointer
		return protoreflect.ValueOfString(value)
	case "goeni.evm.AddCWERC1155PointerProposal.version":
		value := x.Version
		return protoreflect.ValueOfUint32(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goeni.evm.AddCWERC1155PointerProposal"))
		}
		panic(fmt.Errorf("message goeni.evm.AddCWERC1155PointerProposal does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AddCWERC1155PointerProposal) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "goeni.evm.AddCWERC1155PointerProposal.title":
		x.Title = value.Interface().(string)
	case "goeni.evm.AddCWERC1155PointerProposal.description":
		x.Description = value.Interface().(string)
	case "goeni.evm.AddCWERC1155PointerProposal.pointee":
		x.Pointee = value.Interface().(string)
	case "goeni.evm.AddCWERC1155PointerProposal.pointer":
		x.Pointer = value.Interface().(string)
	case "goeni.evm.AddCWERC1155PointerProposal.version":
		x.Version = uint32(value.Uint())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goeni.evm.AddCWERC1155PointerProposal"))
		}
		panic(fmt.Errorf("message goeni.evm.AddCWERC1155PointerProposal does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AddCWERC1155PointerProposal) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "goeni.evm.AddCWERC1155PointerProposal.title":
		panic(fmt.Errorf("field title of message goeni.evm.AddCWERC1155PointerProposal is not mutable"))
	case "goeni.evm.AddCWERC1155PointerProposal.description":
		panic(fmt.Errorf("field description of message goeni.evm.AddCWERC1155PointerProposal is not mutable"))
	case "goeni.evm.AddCWERC1155PointerProposal.pointee":
		panic(fmt.Errorf("field pointee of message goeni.evm.AddCWERC1155PointerProposal is not mutable"))
	case "goeni.evm.AddCWERC1155PointerProposal.pointer":
		panic(fmt.Errorf("field pointer of message goeni.evm.AddCWERC1155PointerProposal is not mutable"))
	case "goeni.evm.AddCWERC1155PointerProposal.version":
		panic(fmt.Errorf("field version of message goeni.evm.AddCWERC1155PointerProposal is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goeni.evm.AddCWERC1155PointerProposal"))
		}
		panic(fmt.Errorf("message goeni.evm.AddCWERC1155PointerProposal does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_AddCWERC1155PointerProposal) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "goeni.evm.AddCWERC1155PointerProposal.title":
		return protoreflect.ValueOfString("")
	case "goeni.evm.AddCWERC1155PointerProposal.description":
		return protoreflect.ValueOfString("")
	case "goeni.evm.AddCWERC1155PointerProposal.pointee":
		return protoreflect.ValueOfString("")
	case "goeni.evm.AddCWERC1155PointerProposal.pointer":
		return protoreflect.ValueOfString("")
	case "goeni.evm.AddCWERC1155PointerProposal.version":
		return protoreflect.ValueOfUint32(uint32(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goeni.evm.AddCWERC1155PointerProposal"))
		}
		panic(fmt.Errorf("message goeni.evm.AddCWERC1155PointerProposal does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_AddCWERC1155PointerProposal) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in goeni.evm.AddCWERC1155PointerProposal", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_AddCWERC1155PointerProposal) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AddCWERC1155PointerProposal) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_AddCWERC1155PointerProposal) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_AddCWERC1155PointerProposal) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*AddCWERC1155PointerProposal)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Title)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Description)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Pointee)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Pointer)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Version != 0 {
			n += 1 + runtime.Sov(uint64(x.Version))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*AddCWERC1155PointerProposal)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Version != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Version))
			i--
			dAtA[i] = 0x28
		}
		if len(x.Pointer) > 0 {
			i -= len(x.Pointer)
			copy(dAtA[i:], x.Pointer)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Pointer)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.Pointee) > 0 {
			i -= len(x.Pointee)
			copy(dAtA[i:], x.Pointee)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Pointee)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Description) > 0 {
			i -= len(x.Description)
			copy(dAtA[i:], x.Description)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Description)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Title) > 0 {
			i -= len(x.Title)
			copy(dAtA[i:], x.Title)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Title)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*AddCWERC1155PointerProposal)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: AddCWERC1155PointerProposal: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: AddCWERC1155PointerProposal: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Title = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Description = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Pointee", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Pointee = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Pointer", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Pointer = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Version", wireType)
				}
				x.Version = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Version |= uint32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_AddERCNativePointerProposalV2             protoreflect.MessageDescriptor
	fd_AddERCNativePointerProposalV2_title       protoreflect.FieldDescriptor
	fd_AddERCNativePointerProposalV2_description protoreflect.FieldDescriptor
	fd_AddERCNativePointerProposalV2_token       protoreflect.FieldDescriptor
	fd_AddERCNativePointerProposalV2_name        protoreflect.FieldDescriptor
	fd_AddERCNativePointerProposalV2_symbol      protoreflect.FieldDescriptor
	fd_AddERCNativePointerProposalV2_decimals    protoreflect.FieldDescriptor
)

func init() {
	file_goeni_evm_gov_proto_init()
	md_AddERCNativePointerProposalV2 = File_goeni_evm_gov_proto.Messages().ByName("AddERCNativePointerProposalV2")
	fd_AddERCNativePointerProposalV2_title = md_AddERCNativePointerProposalV2.Fields().ByName("title")
	fd_AddERCNativePointerProposalV2_description = md_AddERCNativePointerProposalV2.Fields().ByName("description")
	fd_AddERCNativePointerProposalV2_token = md_AddERCNativePointerProposalV2.Fields().ByName("token")
	fd_AddERCNativePointerProposalV2_name = md_AddERCNativePointerProposalV2.Fields().ByName("name")
	fd_AddERCNativePointerProposalV2_symbol = md_AddERCNativePointerProposalV2.Fields().ByName("symbol")
	fd_AddERCNativePointerProposalV2_decimals = md_AddERCNativePointerProposalV2.Fields().ByName("decimals")
}

var _ protoreflect.Message = (*fastReflection_AddERCNativePointerProposalV2)(nil)

type fastReflection_AddERCNativePointerProposalV2 AddERCNativePointerProposalV2

func (x *AddERCNativePointerProposalV2) ProtoReflect() protoreflect.Message {
	return (*fastReflection_AddERCNativePointerProposalV2)(x)
}

func (x *AddERCNativePointerProposalV2) slowProtoReflect() protoreflect.Message {
	mi := &file_goeni_evm_gov_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_AddERCNativePointerProposalV2_messageType fastReflection_AddERCNativePointerProposalV2_messageType
var _ protoreflect.MessageType = fastReflection_AddERCNativePointerProposalV2_messageType{}

type fastReflection_AddERCNativePointerProposalV2_messageType struct{}

func (x fastReflection_AddERCNativePointerProposalV2_messageType) Zero() protoreflect.Message {
	return (*fastReflection_AddERCNativePointerProposalV2)(nil)
}
func (x fastReflection_AddERCNativePointerProposalV2_messageType) New() protoreflect.Message {
	return new(fastReflection_AddERCNativePointerProposalV2)
}
func (x fastReflection_AddERCNativePointerProposalV2_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_AddERCNativePointerProposalV2
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_AddERCNativePointerProposalV2) Descriptor() protoreflect.MessageDescriptor {
	return md_AddERCNativePointerProposalV2
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_AddERCNativePointerProposalV2) Type() protoreflect.MessageType {
	return _fastReflection_AddERCNativePointerProposalV2_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_AddERCNativePointerProposalV2) New() protoreflect.Message {
	return new(fastReflection_AddERCNativePointerProposalV2)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_AddERCNativePointerProposalV2) Interface() protoreflect.ProtoMessage {
	return (*AddERCNativePointerProposalV2)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_AddERCNativePointerProposalV2) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Title != "" {
		value := protoreflect.ValueOfString(x.Title)
		if !f(fd_AddERCNativePointerProposalV2_title, value) {
			return
		}
	}
	if x.Description != "" {
		value := protoreflect.ValueOfString(x.Description)
		if !f(fd_AddERCNativePointerProposalV2_description, value) {
			return
		}
	}
	if x.Token != "" {
		value := protoreflect.ValueOfString(x.Token)
		if !f(fd_AddERCNativePointerProposalV2_token, value) {
			return
		}
	}
	if x.Name != "" {
		value := protoreflect.ValueOfString(x.Name)
		if !f(fd_AddERCNativePointerProposalV2_name, value) {
			return
		}
	}
	if x.Symbol != "" {
		value := protoreflect.ValueOfString(x.Symbol)
		if !f(fd_AddERCNativePointerProposalV2_symbol, value) {
			return
		}
	}
	if x.Decimals != uint32(0) {
		value := protoreflect.ValueOfUint32(x.Decimals)
		if !f(fd_AddERCNativePointerProposalV2_decimals, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_AddERCNativePointerProposalV2) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "goeni.evm.AddERCNativePointerProposalV2.title":
		return x.Title != ""
	case "goeni.evm.AddERCNativePointerProposalV2.description":
		return x.Description != ""
	case "goeni.evm.AddERCNativePointerProposalV2.token":
		return x.Token != ""
	case "goeni.evm.AddERCNativePointerProposalV2.name":
		return x.Name != ""
	case "goeni.evm.AddERCNativePointerProposalV2.symbol":
		return x.Symbol != ""
	case "goeni.evm.AddERCNativePointerProposalV2.decimals":
		return x.Decimals != uint32(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goeni.evm.AddERCNativePointerProposalV2"))
		}
		panic(fmt.Errorf("message goeni.evm.AddERCNativePointerProposalV2 does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AddERCNativePointerProposalV2) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "goeni.evm.AddERCNativePointerProposalV2.title":
		x.Title = ""
	case "goeni.evm.AddERCNativePointerProposalV2.description":
		x.Description = ""
	case "goeni.evm.AddERCNativePointerProposalV2.token":
		x.Token = ""
	case "goeni.evm.AddERCNativePointerProposalV2.name":
		x.Name = ""
	case "goeni.evm.AddERCNativePointerProposalV2.symbol":
		x.Symbol = ""
	case "goeni.evm.AddERCNativePointerProposalV2.decimals":
		x.Decimals = uint32(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goeni.evm.AddERCNativePointerProposalV2"))
		}
		panic(fmt.Errorf("message goeni.evm.AddERCNativePointerProposalV2 does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_AddERCNativePointerProposalV2) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "goeni.evm.AddERCNativePointerProposalV2.title":
		value := x.Title
		return protoreflect.ValueOfString(value)
	case "goeni.evm.AddERCNativePointerProposalV2.description":
		value := x.Description
		return protoreflect.ValueOfString(value)
	case "goeni.evm.AddERCNativePointerProposalV2.token":
		value := x.Token
		return protoreflect.ValueOfString(value)
	case "goeni.evm.AddERCNativePointerProposalV2.name":
		value := x.Name
		return protoreflect.ValueOfString(value)
	case "goeni.evm.AddERCNativePointerProposalV2.symbol":
		value := x.Symbol
		return protoreflect.ValueOfString(value)
	case "goeni.evm.AddERCNativePointerProposalV2.decimals":
		value := x.Decimals
		return protoreflect.ValueOfUint32(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goeni.evm.AddERCNativePointerProposalV2"))
		}
		panic(fmt.Errorf("message goeni.evm.AddERCNativePointerProposalV2 does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AddERCNativePointerProposalV2) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "goeni.evm.AddERCNativePointerProposalV2.title":
		x.Title = value.Interface().(string)
	case "goeni.evm.AddERCNativePointerProposalV2.description":
		x.Description = value.Interface().(string)
	case "goeni.evm.AddERCNativePointerProposalV2.token":
		x.Token = value.Interface().(string)
	case "goeni.evm.AddERCNativePointerProposalV2.name":
		x.Name = value.Interface().(string)
	case "goeni.evm.AddERCNativePointerProposalV2.symbol":
		x.Symbol = value.Interface().(string)
	case "goeni.evm.AddERCNativePointerProposalV2.decimals":
		x.Decimals = uint32(value.Uint())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goeni.evm.AddERCNativePointerProposalV2"))
		}
		panic(fmt.Errorf("message goeni.evm.AddERCNativePointerProposalV2 does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AddERCNativePointerProposalV2) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "goeni.evm.AddERCNativePointerProposalV2.title":
		panic(fmt.Errorf("field title of message goeni.evm.AddERCNativePointerProposalV2 is not mutable"))
	case "goeni.evm.AddERCNativePointerProposalV2.description":
		panic(fmt.Errorf("field description of message goeni.evm.AddERCNativePointerProposalV2 is not mutable"))
	case "goeni.evm.AddERCNativePointerProposalV2.token":
		panic(fmt.Errorf("field token of message goeni.evm.AddERCNativePointerProposalV2 is not mutable"))
	case "goeni.evm.AddERCNativePointerProposalV2.name":
		panic(fmt.Errorf("field name of message goeni.evm.AddERCNativePointerProposalV2 is not mutable"))
	case "goeni.evm.AddERCNativePointerProposalV2.symbol":
		panic(fmt.Errorf("field symbol of message goeni.evm.AddERCNativePointerProposalV2 is not mutable"))
	case "goeni.evm.AddERCNativePointerProposalV2.decimals":
		panic(fmt.Errorf("field decimals of message goeni.evm.AddERCNativePointerProposalV2 is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goeni.evm.AddERCNativePointerProposalV2"))
		}
		panic(fmt.Errorf("message goeni.evm.AddERCNativePointerProposalV2 does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_AddERCNativePointerProposalV2) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "goeni.evm.AddERCNativePointerProposalV2.title":
		return protoreflect.ValueOfString("")
	case "goeni.evm.AddERCNativePointerProposalV2.description":
		return protoreflect.ValueOfString("")
	case "goeni.evm.AddERCNativePointerProposalV2.token":
		return protoreflect.ValueOfString("")
	case "goeni.evm.AddERCNativePointerProposalV2.name":
		return protoreflect.ValueOfString("")
	case "goeni.evm.AddERCNativePointerProposalV2.symbol":
		return protoreflect.ValueOfString("")
	case "goeni.evm.AddERCNativePointerProposalV2.decimals":
		return protoreflect.ValueOfUint32(uint32(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goeni.evm.AddERCNativePointerProposalV2"))
		}
		panic(fmt.Errorf("message goeni.evm.AddERCNativePointerProposalV2 does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_AddERCNativePointerProposalV2) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in goeni.evm.AddERCNativePointerProposalV2", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_AddERCNativePointerProposalV2) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AddERCNativePointerProposalV2) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_AddERCNativePointerProposalV2) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_AddERCNativePointerProposalV2) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*AddERCNativePointerProposalV2)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Title)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Description)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Token)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Name)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Symbol)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Decimals != 0 {
			n += 1 + runtime.Sov(uint64(x.Decimals))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*AddERCNativePointerProposalV2)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Decimals != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Decimals))
			i--
			dAtA[i] = 0x30
		}
		if len(x.Symbol) > 0 {
			i -= len(x.Symbol)
			copy(dAtA[i:], x.Symbol)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Symbol)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.Name) > 0 {
			i -= len(x.Name)
			copy(dAtA[i:], x.Name)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Name)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.Token) > 0 {
			i -= len(x.Token)
			copy(dAtA[i:], x.Token)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Token)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Description) > 0 {
			i -= len(x.Description)
			copy(dAtA[i:], x.Description)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Description)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Title) > 0 {
			i -= len(x.Title)
			copy(dAtA[i:], x.Title)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Title)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*AddERCNativePointerProposalV2)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: AddERCNativePointerProposalV2: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: AddERCNativePointerProposalV2: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Title = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Description = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Token", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Token = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Name = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Symbol", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Symbol = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 6:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Decimals", wireType)
				}
				x.Decimals = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Decimals |= uint32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: goeni/evm/gov.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AddERCNativePointerProposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Token       string `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	Pointer     string `protobuf:"bytes,4,opt,name=pointer,proto3" json:"pointer,omitempty"`
	Version     uint32 `protobuf:"varint,5,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *AddERCNativePointerProposal) Reset() {
	*x = AddERCNativePointerProposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goeni_evm_gov_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddERCNativePointerProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddERCNativePointerProposal) ProtoMessage() {}

// Deprecated: Use AddERCNativePointerProposal.ProtoReflect.Descriptor instead.
func (*AddERCNativePointerProposal) Descriptor() ([]byte, []int) {
	return file_goeni_evm_gov_proto_rawDescGZIP(), []int{0}
}

func (x *AddERCNativePointerProposal) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AddERCNativePointerProposal) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AddERCNativePointerProposal) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *AddERCNativePointerProposal) GetPointer() string {
	if x != nil {
		return x.Pointer
	}
	return ""
}

func (x *AddERCNativePointerProposal) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type AddERCCW20PointerProposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Pointee     string `protobuf:"bytes,3,opt,name=pointee,proto3" json:"pointee,omitempty"`
	Pointer     string `protobuf:"bytes,4,opt,name=pointer,proto3" json:"pointer,omitempty"`
	Version     uint32 `protobuf:"varint,5,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *AddERCCW20PointerProposal) Reset() {
	*x = AddERCCW20PointerProposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goeni_evm_gov_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddERCCW20PointerProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddERCCW20PointerProposal) ProtoMessage() {}

// Deprecated: Use AddERCCW20PointerProposal.ProtoReflect.Descriptor instead.
func (*AddERCCW20PointerProposal) Descriptor() ([]byte, []int) {
	return file_goeni_evm_gov_proto_rawDescGZIP(), []int{1}
}

func (x *AddERCCW20PointerProposal) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AddERCCW20PointerProposal) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AddERCCW20PointerProposal) GetPointee() string {
	if x != nil {
		return x.Pointee
	}
	return ""
}

func (x *AddERCCW20PointerProposal) GetPointer() string {
	if x != nil {
		return x.Pointer
	}
	return ""
}

func (x *AddERCCW20PointerProposal) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type AddERCCW721PointerProposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Pointee     string `protobuf:"bytes,3,opt,name=pointee,proto3" json:"pointee,omitempty"`
	Pointer     string `protobuf:"bytes,4,opt,name=pointer,proto3" json:"pointer,omitempty"`
	Version     uint32 `protobuf:"varint,5,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *AddERCCW721PointerProposal) Reset() {
	*x = AddERCCW721PointerProposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goeni_evm_gov_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddERCCW721PointerProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddERCCW721PointerProposal) ProtoMessage() {}

// Deprecated: Use AddERCCW721PointerProposal.ProtoReflect.Descriptor instead.
func (*AddERCCW721PointerProposal) Descriptor() ([]byte, []int) {
	return file_goeni_evm_gov_proto_rawDescGZIP(), []int{2}
}

func (x *AddERCCW721PointerProposal) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AddERCCW721PointerProposal) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AddERCCW721PointerProposal) GetPointee() string {
	if x != nil {
		return x.Pointee
	}
	return ""
}

func (x *AddERCCW721PointerProposal) GetPointer() string {
	if x != nil {
		return x.Pointer
	}
	return ""
}

func (x *AddERCCW721PointerProposal) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type AddERCCW1155PointerProposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Pointee     string `protobuf:"bytes,3,opt,name=pointee,proto3" json:"pointee,omitempty"`
	Pointer     string `protobuf:"bytes,4,opt,name=pointer,proto3" json:"pointer,omitempty"`
	Version     uint32 `protobuf:"varint,5,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *AddERCCW1155PointerProposal) Reset() {
	*x = AddERCCW1155PointerProposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goeni_evm_gov_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddERCCW1155PointerProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddERCCW1155PointerProposal) ProtoMessage() {}

// Deprecated: Use AddERCCW1155PointerProposal.ProtoReflect.Descriptor instead.
func (*AddERCCW1155PointerProposal) Descriptor() ([]byte, []int) {
	return file_goeni_evm_gov_proto_rawDescGZIP(), []int{3}
}

func (x *AddERCCW1155PointerProposal) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AddERCCW1155PointerProposal) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AddERCCW1155PointerProposal) GetPointee() string {
	if x != nil {
		return x.Pointee
	}
	return ""
}

func (x *AddERCCW1155PointerProposal) GetPointer() string {
	if x != nil {
		return x.Pointer
	}
	return ""
}

func (x *AddERCCW1155PointerProposal) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type AddCWERC20PointerProposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Pointee     string `protobuf:"bytes,3,opt,name=pointee,proto3" json:"pointee,omitempty"`
	Pointer     string `protobuf:"bytes,4,opt,name=pointer,proto3" json:"pointer,omitempty"`
	Version     uint32 `protobuf:"varint,5,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *AddCWERC20PointerProposal) Reset() {
	*x = AddCWERC20PointerProposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goeni_evm_gov_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCWERC20PointerProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCWERC20PointerProposal) ProtoMessage() {}

// Deprecated: Use AddCWERC20PointerProposal.ProtoReflect.Descriptor instead.
func (*AddCWERC20PointerProposal) Descriptor() ([]byte, []int) {
	return file_goeni_evm_gov_proto_rawDescGZIP(), []int{4}
}

func (x *AddCWERC20PointerProposal) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AddCWERC20PointerProposal) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AddCWERC20PointerProposal) GetPointee() string {
	if x != nil {
		return x.Pointee
	}
	return ""
}

func (x *AddCWERC20PointerProposal) GetPointer() string {
	if x != nil {
		return x.Pointer
	}
	return ""
}

func (x *AddCWERC20PointerProposal) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type AddCWERC721PointerProposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Pointee     string `protobuf:"bytes,3,opt,name=pointee,proto3" json:"pointee,omitempty"`
	Pointer     string `protobuf:"bytes,4,opt,name=pointer,proto3" json:"pointer,omitempty"`
	Version     uint32 `protobuf:"varint,5,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *AddCWERC721PointerProposal) Reset() {
	*x = AddCWERC721PointerProposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goeni_evm_gov_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCWERC721PointerProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCWERC721PointerProposal) ProtoMessage() {}

// Deprecated: Use AddCWERC721PointerProposal.ProtoReflect.Descriptor instead.
func (*AddCWERC721PointerProposal) Descriptor() ([]byte, []int) {
	return file_goeni_evm_gov_proto_rawDescGZIP(), []int{5}
}

func (x *AddCWERC721PointerProposal) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AddCWERC721PointerProposal) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AddCWERC721PointerProposal) GetPointee() string {
	if x != nil {
		return x.Pointee
	}
	return ""
}

func (x *AddCWERC721PointerProposal) GetPointer() string {
	if x != nil {
		return x.Pointer
	}
	return ""
}

func (x *AddCWERC721PointerProposal) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type AddCWERC1155PointerProposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Pointee     string `protobuf:"bytes,3,opt,name=pointee,proto3" json:"pointee,omitempty"`
	Pointer     string `protobuf:"bytes,4,opt,name=pointer,proto3" json:"pointer,omitempty"`
	Version     uint32 `protobuf:"varint,5,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *AddCWERC1155PointerProposal) Reset() {
	*x = AddCWERC1155PointerProposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goeni_evm_gov_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCWERC1155PointerProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCWERC1155PointerProposal) ProtoMessage() {}

// Deprecated: Use AddCWERC1155PointerProposal.ProtoReflect.Descriptor instead.
func (*AddCWERC1155PointerProposal) Descriptor() ([]byte, []int) {
	return file_goeni_evm_gov_proto_rawDescGZIP(), []int{6}
}

func (x *AddCWERC1155PointerProposal) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AddCWERC1155PointerProposal) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AddCWERC1155PointerProposal) GetPointee() string {
	if x != nil {
		return x.Pointee
	}
	return ""
}

func (x *AddCWERC1155PointerProposal) GetPointer() string {
	if x != nil {
		return x.Pointer
	}
	return ""
}

func (x *AddCWERC1155PointerProposal) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type AddERCNativePointerProposalV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Token       string `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	Name        string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Symbol      string `protobuf:"bytes,5,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Decimals    uint32 `protobuf:"varint,6,opt,name=decimals,proto3" json:"decimals,omitempty"`
}

func (x *AddERCNativePointerProposalV2) Reset() {
	*x = AddERCNativePointerProposalV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goeni_evm_gov_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddERCNativePointerProposalV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddERCNativePointerProposalV2) ProtoMessage() {}

// Deprecated: Use AddERCNativePointerProposalV2.ProtoReflect.Descriptor instead.
func (*AddERCNativePointerProposalV2) Descriptor() ([]byte, []int) {
	return file_goeni_evm_gov_proto_rawDescGZIP(), []int{7}
}

func (x *AddERCNativePointerProposalV2) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AddERCNativePointerProposalV2) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AddERCNativePointerProposalV2) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *AddERCNativePointerProposalV2) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddERCNativePointerProposalV2) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *AddERCNativePointerProposalV2) GetDecimals() uint32 {
	if x != nil {
		return x.Decimals
	}
	return 0
}

var File_goeni_evm_gov_proto protoreflect.FileDescriptor

var file_goeni_evm_gov_proto_rawDesc = []byte{
	0x0a, 0x13, 0x67, 0x6f, 0x65, 0x6e, 0x69, 0x2f, 0x65, 0x76, 0x6d, 0x2f, 0x67, 0x6f, 0x76, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x67, 0x6f, 0x65, 0x6e, 0x69, 0x2e, 0x65, 0x76, 0x6d,
	0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8d, 0x02, 0x0a, 0x1b, 0x41, 0x64, 0x64, 0x45, 0x52,
	0x43, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x26, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0xf2, 0xde, 0x1f, 0x0c, 0x79, 0x61, 0x6d, 0x6c, 0x3a,
	0x22, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x38,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x16, 0xf2, 0xde, 0x1f, 0x12, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0xf2, 0xde, 0x1f, 0x0c, 0x79, 0x61, 0x6d,
	0x6c, 0x3a, 0x22, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x2c, 0x0a, 0x07, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x12, 0xf2, 0xde, 0x1f, 0x0e, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x22, 0x52, 0x07, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x2c,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x42,
	0x12, 0xf2, 0xde, 0x1f, 0x0e, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x22, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x08, 0x88, 0xa0,
	0x1f, 0x00, 0xe8, 0xa0, 0x1f, 0x00, 0x22, 0x91, 0x02, 0x0a, 0x19, 0x41, 0x64, 0x64, 0x45, 0x52,
	0x43, 0x43, 0x57, 0x32, 0x30, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70,
	0x6f, 0x73, 0x61, 0x6c, 0x12, 0x26, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x10, 0xf2, 0xde, 0x1f, 0x0c, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x22, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x38, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x16, 0xf2, 0xde, 0x1f, 0x12, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x07, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x65,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x12, 0xf2, 0xde, 0x1f, 0x0e, 0x79, 0x61, 0x6d,
	0x6c, 0x3a, 0x22, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x65, 0x22, 0x52, 0x07, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x65, 0x65, 0x12, 0x2c, 0x0a, 0x07, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x12, 0xf2, 0xde, 0x1f, 0x0e, 0x79, 0x61, 0x6d, 0x6c, 0x3a,
	0x22, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x22, 0x52, 0x07, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x12, 0x2c, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0d, 0x42, 0x12, 0xf2, 0xde, 0x1f, 0x0e, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x3a, 0x08, 0x88, 0xa0, 0x1f, 0x00, 0xe8, 0xa0, 0x1f, 0x00, 0x22, 0x92, 0x02, 0x0a, 0x1a, 0x41,
	0x64, 0x64, 0x45, 0x52, 0x43, 0x43, 0x57, 0x37, 0x32, 0x31, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x26, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0xf2, 0xde, 0x1f, 0x0c, 0x79, 0x61,
	0x6d, 0x6c, 0x3a, 0x22, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x38, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x16, 0xf2, 0xde, 0x1f, 0x12, 0x79, 0x61, 0x6d, 0x6c,
	0x3a, 0x22, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x07, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x65, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x12, 0xf2, 0xde,
	0x1f, 0x0e, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x65, 0x22,
	0x52, 0x07, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x65, 0x12, 0x2c, 0x0a, 0x07, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x12, 0xf2, 0xde, 0x1f, 0x0e,
	0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x22, 0x52, 0x07,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x12, 0xf2, 0xde, 0x1f, 0x0e, 0x79, 0x61,
	0x6d, 0x6c, 0x3a, 0x22, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x08, 0x88, 0xa0, 0x1f, 0x00, 0xe8, 0xa0, 0x1f, 0x00, 0x22,
	0x93, 0x02, 0x0a, 0x1b, 0x41, 0x64, 0x64, 0x45, 0x52, 0x43, 0x43, 0x57, 0x31, 0x31, 0x35, 0x35,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12,
	0x26, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10,
	0xf2, 0xde, 0x1f, 0x0c, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x38, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x16, 0xf2, 0xde,
	0x1f, 0x12, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x2c, 0x0a, 0x07, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x12, 0xf2, 0xde, 0x1f, 0x0e, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x65, 0x65, 0x22, 0x52, 0x07, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x65, 0x12,
	0x2c, 0x0a, 0x07, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x12, 0xf2, 0xde, 0x1f, 0x0e, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x22, 0x52, 0x07, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x2c, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x12,
	0xf2, 0xde, 0x1f, 0x0e, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x22, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x08, 0x88, 0xa0, 0x1f,
	0x00, 0xe8, 0xa0, 0x1f, 0x00, 0x22, 0x91, 0x02, 0x0a, 0x19, 0x41, 0x64, 0x64, 0x43, 0x57, 0x45,
	0x52, 0x43, 0x32, 0x30, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x6f,
	0x73, 0x61, 0x6c, 0x12, 0x26, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x10, 0xf2, 0xde, 0x1f, 0x0c, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x22, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x38, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x16, 0xf2, 0xde, 0x1f, 0x12, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x07, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x12, 0xf2, 0xde, 0x1f, 0x0e, 0x79, 0x61, 0x6d, 0x6c,
	0x3a, 0x22, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x65, 0x22, 0x52, 0x07, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x65, 0x65, 0x12, 0x2c, 0x0a, 0x07, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x12, 0xf2, 0xde, 0x1f, 0x0e, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x22, 0x52, 0x07, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x12, 0x2c, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x42, 0x12, 0xf2, 0xde, 0x1f, 0x0e, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x3a,
	0x08, 0x88, 0xa0, 0x1f, 0x00, 0xe8, 0xa0, 0x1f, 0x00, 0x22, 0x92, 0x02, 0x0a, 0x1a, 0x41, 0x64,
	0x64, 0x43, 0x57, 0x45, 0x52, 0x43, 0x37, 0x32, 0x31, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x26, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0xf2, 0xde, 0x1f, 0x0c, 0x79, 0x61, 0x6d,
	0x6c, 0x3a, 0x22, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x38, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x16, 0xf2, 0xde, 0x1f, 0x12, 0x79, 0x61, 0x6d, 0x6c, 0x3a,
	0x22, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x07, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x65, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x12, 0xf2, 0xde, 0x1f,
	0x0e, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x65, 0x22, 0x52,
	0x07, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x65, 0x12, 0x2c, 0x0a, 0x07, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x12, 0xf2, 0xde, 0x1f, 0x0e, 0x79,
	0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x22, 0x52, 0x07, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x12, 0xf2, 0xde, 0x1f, 0x0e, 0x79, 0x61, 0x6d,
	0x6c, 0x3a, 0x22, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x08, 0x88, 0xa0, 0x1f, 0x00, 0xe8, 0xa0, 0x1f, 0x00, 0x22, 0x93,
	0x02, 0x0a, 0x1b, 0x41, 0x64, 0x64, 0x43, 0x57, 0x45, 0x52, 0x43, 0x31, 0x31, 0x35, 0x35, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x26,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0xf2,
	0xde, 0x1f, 0x0c, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x38, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x16, 0xf2, 0xde, 0x1f,
	0x12, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x2c, 0x0a, 0x07, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x12, 0xf2, 0xde, 0x1f, 0x0e, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x65, 0x65, 0x22, 0x52, 0x07, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x65, 0x12, 0x2c,
	0x0a, 0x07, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x12, 0xf2, 0xde, 0x1f, 0x0e, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x22, 0x52, 0x07, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x12, 0xf2,
	0xde, 0x1f, 0x0e, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x22, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x08, 0x88, 0xa0, 0x1f, 0x00,
	0xe8, 0xa0, 0x1f, 0x00, 0x22, 0xb4, 0x02, 0x0a, 0x1d, 0x41, 0x64, 0x64, 0x45, 0x52, 0x43, 0x4e,
	0x61, 0x74, 0x69, 0x76, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70,
	0x6f, 0x73, 0x61, 0x6c, 0x56, 0x32, 0x12, 0x26, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0xf2, 0xde, 0x1f, 0x0c, 0x79, 0x61, 0x6d, 0x6c, 0x3a,
	0x22, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x38,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x16, 0xf2, 0xde, 0x1f, 0x12, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0xf2, 0xde, 0x1f, 0x0c, 0x79, 0x61, 0x6d,
	0x6c, 0x3a, 0x22, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x23, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0f,
	0xf2, 0xde, 0x1f, 0x0b, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0xf2, 0xde, 0x1f, 0x0d, 0x79, 0x61, 0x6d, 0x6c, 0x3a,
	0x22, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x22, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x12, 0x2f, 0x0a, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0d, 0x42, 0x13, 0xf2, 0xde, 0x1f, 0x0f, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x64, 0x65,
	0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x22, 0x52, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c,
	0x73, 0x3a, 0x08, 0x88, 0xa0, 0x1f, 0x00, 0xe8, 0xa0, 0x1f, 0x00, 0x42, 0x89, 0x01, 0x0a, 0x0d,
	0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x6f, 0x65, 0x6e, 0x69, 0x2e, 0x65, 0x76, 0x6d, 0x42, 0x08, 0x47,
	0x6f, 0x76, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x6e, 0x69, 0x2d, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f,
	0x67, 0x6f, 0x2d, 0x65, 0x6e, 0x69, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x6f, 0x65, 0x6e, 0x69,
	0x2f, 0x65, 0x76, 0x6d, 0xa2, 0x02, 0x03, 0x47, 0x45, 0x58, 0xaa, 0x02, 0x09, 0x47, 0x6f, 0x65,
	0x6e, 0x69, 0x2e, 0x45, 0x76, 0x6d, 0xca, 0x02, 0x09, 0x47, 0x6f, 0x65, 0x6e, 0x69, 0x5c, 0x45,
	0x76, 0x6d, 0xe2, 0x02, 0x15, 0x47, 0x6f, 0x65, 0x6e, 0x69, 0x5c, 0x45, 0x76, 0x6d, 0x5c, 0x47,
	0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0a, 0x47, 0x6f, 0x65,
	0x6e, 0x69, 0x3a, 0x3a, 0x45, 0x76, 0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_goeni_evm_gov_proto_rawDescOnce sync.Once
	file_goeni_evm_gov_proto_rawDescData = file_goeni_evm_gov_proto_rawDesc
)

func file_goeni_evm_gov_proto_rawDescGZIP() []byte {
	file_goeni_evm_gov_proto_rawDescOnce.Do(func() {
		file_goeni_evm_gov_proto_rawDescData = protoimpl.X.CompressGZIP(file_goeni_evm_gov_proto_rawDescData)
	})
	return file_goeni_evm_gov_proto_rawDescData
}

var file_goeni_evm_gov_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_goeni_evm_gov_proto_goTypes = []interface{}{
	(*AddERCNativePointerProposal)(nil),   // 0: goeni.evm.AddERCNativePointerProposal
	(*AddERCCW20PointerProposal)(nil),     // 1: goeni.evm.AddERCCW20PointerProposal
	(*AddERCCW721PointerProposal)(nil),    // 2: goeni.evm.AddERCCW721PointerProposal
	(*AddERCCW1155PointerProposal)(nil),   // 3: goeni.evm.AddERCCW1155PointerProposal
	(*AddCWERC20PointerProposal)(nil),     // 4: goeni.evm.AddCWERC20PointerProposal
	(*AddCWERC721PointerProposal)(nil),    // 5: goeni.evm.AddCWERC721PointerProposal
	(*AddCWERC1155PointerProposal)(nil),   // 6: goeni.evm.AddCWERC1155PointerProposal
	(*AddERCNativePointerProposalV2)(nil), // 7: goeni.evm.AddERCNativePointerProposalV2
}
var file_goeni_evm_gov_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_goeni_evm_gov_proto_init() }
func file_goeni_evm_gov_proto_init() {
	if File_goeni_evm_gov_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_goeni_evm_gov_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddERCNativePointerProposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goeni_evm_gov_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddERCCW20PointerProposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goeni_evm_gov_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddERCCW721PointerProposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goeni_evm_gov_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddERCCW1155PointerProposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goeni_evm_gov_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCWERC20PointerProposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goeni_evm_gov_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCWERC721PointerProposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goeni_evm_gov_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCWERC1155PointerProposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goeni_evm_gov_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddERCNativePointerProposalV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_goeni_evm_gov_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_goeni_evm_gov_proto_goTypes,
		DependencyIndexes: file_goeni_evm_gov_proto_depIdxs,
		MessageInfos:      file_goeni_evm_gov_proto_msgTypes,
	}.Build()
	File_goeni_evm_gov_proto = out.File
	file_goeni_evm_gov_proto_rawDesc = nil
	file_goeni_evm_gov_proto_goTypes = nil
	file_goeni_evm_gov_proto_depIdxs = nil
}
