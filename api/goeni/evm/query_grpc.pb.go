// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             (unknown)
// source: goeni/evm/query.proto

package evm

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	Query_EniAddressByEVMAddress_FullMethodName = "/goeni.evm.Query/EniAddressByEVMAddress"
	Query_EVMAddressByEniAddress_FullMethodName = "/goeni.evm.Query/EVMAddressByEniAddress"
	Query_StaticCall_FullMethodName             = "/goeni.evm.Query/StaticCall"
	Query_Pointer_FullMethodName                = "/goeni.evm.Query/Pointer"
	Query_PointerVersion_FullMethodName         = "/goeni.evm.Query/PointerVersion"
	Query_Pointee_FullMethodName                = "/goeni.evm.Query/Pointee"
)

// QueryClient is the client API for Query service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type QueryClient interface {
	EniAddressByEVMAddress(ctx context.Context, in *QueryEniAddressByEVMAddressRequest, opts ...grpc.CallOption) (*QueryEniAddressByEVMAddressResponse, error)
	EVMAddressByEniAddress(ctx context.Context, in *QueryEVMAddressByEniAddressRequest, opts ...grpc.CallOption) (*QueryEVMAddressByEniAddressResponse, error)
	StaticCall(ctx context.Context, in *QueryStaticCallRequest, opts ...grpc.CallOption) (*QueryStaticCallResponse, error)
	Pointer(ctx context.Context, in *QueryPointerRequest, opts ...grpc.CallOption) (*QueryPointerResponse, error)
	PointerVersion(ctx context.Context, in *QueryPointerVersionRequest, opts ...grpc.CallOption) (*QueryPointerVersionResponse, error)
	Pointee(ctx context.Context, in *QueryPointeeRequest, opts ...grpc.CallOption) (*QueryPointeeResponse, error)
}

type queryClient struct {
	cc grpc.ClientConnInterface
}

func NewQueryClient(cc grpc.ClientConnInterface) QueryClient {
	return &queryClient{cc}
}

func (c *queryClient) EniAddressByEVMAddress(ctx context.Context, in *QueryEniAddressByEVMAddressRequest, opts ...grpc.CallOption) (*QueryEniAddressByEVMAddressResponse, error) {
	out := new(QueryEniAddressByEVMAddressResponse)
	err := c.cc.Invoke(ctx, Query_EniAddressByEVMAddress_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) EVMAddressByEniAddress(ctx context.Context, in *QueryEVMAddressByEniAddressRequest, opts ...grpc.CallOption) (*QueryEVMAddressByEniAddressResponse, error) {
	out := new(QueryEVMAddressByEniAddressResponse)
	err := c.cc.Invoke(ctx, Query_EVMAddressByEniAddress_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) StaticCall(ctx context.Context, in *QueryStaticCallRequest, opts ...grpc.CallOption) (*QueryStaticCallResponse, error) {
	out := new(QueryStaticCallResponse)
	err := c.cc.Invoke(ctx, Query_StaticCall_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) Pointer(ctx context.Context, in *QueryPointerRequest, opts ...grpc.CallOption) (*QueryPointerResponse, error) {
	out := new(QueryPointerResponse)
	err := c.cc.Invoke(ctx, Query_Pointer_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) PointerVersion(ctx context.Context, in *QueryPointerVersionRequest, opts ...grpc.CallOption) (*QueryPointerVersionResponse, error) {
	out := new(QueryPointerVersionResponse)
	err := c.cc.Invoke(ctx, Query_PointerVersion_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) Pointee(ctx context.Context, in *QueryPointeeRequest, opts ...grpc.CallOption) (*QueryPointeeResponse, error) {
	out := new(QueryPointeeResponse)
	err := c.cc.Invoke(ctx, Query_Pointee_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QueryServer is the server API for Query service.
// All implementations must embed UnimplementedQueryServer
// for forward compatibility
type QueryServer interface {
	EniAddressByEVMAddress(context.Context, *QueryEniAddressByEVMAddressRequest) (*QueryEniAddressByEVMAddressResponse, error)
	EVMAddressByEniAddress(context.Context, *QueryEVMAddressByEniAddressRequest) (*QueryEVMAddressByEniAddressResponse, error)
	StaticCall(context.Context, *QueryStaticCallRequest) (*QueryStaticCallResponse, error)
	Pointer(context.Context, *QueryPointerRequest) (*QueryPointerResponse, error)
	PointerVersion(context.Context, *QueryPointerVersionRequest) (*QueryPointerVersionResponse, error)
	Pointee(context.Context, *QueryPointeeRequest) (*QueryPointeeResponse, error)
	mustEmbedUnimplementedQueryServer()
}

// UnimplementedQueryServer must be embedded to have forward compatible implementations.
type UnimplementedQueryServer struct {
}

func (UnimplementedQueryServer) EniAddressByEVMAddress(context.Context, *QueryEniAddressByEVMAddressRequest) (*QueryEniAddressByEVMAddressResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EniAddressByEVMAddress not implemented")
}
func (UnimplementedQueryServer) EVMAddressByEniAddress(context.Context, *QueryEVMAddressByEniAddressRequest) (*QueryEVMAddressByEniAddressResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EVMAddressByEniAddress not implemented")
}
func (UnimplementedQueryServer) StaticCall(context.Context, *QueryStaticCallRequest) (*QueryStaticCallResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StaticCall not implemented")
}
func (UnimplementedQueryServer) Pointer(context.Context, *QueryPointerRequest) (*QueryPointerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Pointer not implemented")
}
func (UnimplementedQueryServer) PointerVersion(context.Context, *QueryPointerVersionRequest) (*QueryPointerVersionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PointerVersion not implemented")
}
func (UnimplementedQueryServer) Pointee(context.Context, *QueryPointeeRequest) (*QueryPointeeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Pointee not implemented")
}
func (UnimplementedQueryServer) mustEmbedUnimplementedQueryServer() {}

// UnsafeQueryServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to QueryServer will
// result in compilation errors.
type UnsafeQueryServer interface {
	mustEmbedUnimplementedQueryServer()
}

func RegisterQueryServer(s grpc.ServiceRegistrar, srv QueryServer) {
	s.RegisterService(&Query_ServiceDesc, srv)
}

func _Query_EniAddressByEVMAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryEniAddressByEVMAddressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).EniAddressByEVMAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Query_EniAddressByEVMAddress_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).EniAddressByEVMAddress(ctx, req.(*QueryEniAddressByEVMAddressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_EVMAddressByEniAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryEVMAddressByEniAddressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).EVMAddressByEniAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Query_EVMAddressByEniAddress_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).EVMAddressByEniAddress(ctx, req.(*QueryEVMAddressByEniAddressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_StaticCall_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryStaticCallRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).StaticCall(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Query_StaticCall_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).StaticCall(ctx, req.(*QueryStaticCallRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_Pointer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryPointerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).Pointer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Query_Pointer_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).Pointer(ctx, req.(*QueryPointerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_PointerVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryPointerVersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).PointerVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Query_PointerVersion_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).PointerVersion(ctx, req.(*QueryPointerVersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_Pointee_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryPointeeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).Pointee(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Query_Pointee_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).Pointee(ctx, req.(*QueryPointeeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// Query_ServiceDesc is the grpc.ServiceDesc for Query service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Query_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "goeni.evm.Query",
	HandlerType: (*QueryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "EniAddressByEVMAddress",
			Handler:    _Query_EniAddressByEVMAddress_Handler,
		},
		{
			MethodName: "EVMAddressByEniAddress",
			Handler:    _Query_EVMAddressByEniAddress_Handler,
		},
		{
			MethodName: "StaticCall",
			Handler:    _Query_StaticCall_Handler,
		},
		{
			MethodName: "Pointer",
			Handler:    _Query_Pointer_Handler,
		},
		{
			MethodName: "PointerVersion",
			Handler:    _Query_PointerVersion_Handler,
		},
		{
			MethodName: "Pointee",
			Handler:    _Query_Pointee_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "goeni/evm/query.proto",
}
