app-db-backend = ""
halt-height = 0
halt-time = 0
iavl-cache-size = 781250
iavl-disable-fastnode = false
index-events = []
inter-block-cache = true
min-retain-blocks = 0
minimum-gas-prices = "0stake"
pruning = "default"
pruning-interval = "0"
pruning-keep-recent = "0"
query-gas-limit = "0"

[api]
  address = "tcp://0.0.0.0:1317"
  enable = true
  enabled-unsafe-cors = true
  max-open-connections = 1000
  rpc-max-body-bytes = 1000000
  rpc-read-timeout = 10
  rpc-write-timeout = 0
  swagger = false

[grpc]
  address = "localhost:9090"
  enable = true
  max-recv-msg-size = "10485760"
  max-send-msg-size = "2147483647"

[grpc-web]
  enable = true

[mempool]
  max-txs = -1

[rpc]
  cors_allowed_origins = ["*"]

[state-sync]
  snapshot-interval = 0
  snapshot-keep-recent = 2

[streaming]

  [streaming.abci]
    keys = []
    plugin = ""
    stop-node-on-err = true

[telemetry]
  datadog-hostname = ""
  enable-hostname = false
  enable-hostname-label = false
  enable-service-label = false
  enabled = false
  global-labels = []
  metrics-sink = ""
  prometheus-retention-time = 0
  service-name = ""
  statsd-addr = ""


#############################################################################
###                             EniDB Configuration                       ###
#############################################################################

[state-commit]
# Enable defines if the state-commit (memiavl) should be enabled to override existing IAVL db backend.
sc-enable = true

# ZeroCopy defines if memiavl should return slices pointing to mmap-ed buffers directly (zero-copy),
# the zero-copied slices must not be retained beyond current block's execution.
# the sdk address cache will be disabled if zero-copy is enabled.
sc-zero-copy = false

# AsyncCommitBuffer defines the size of asynchronous commit queue, this greatly improve block catching-up
# performance, <=0 means synchronous commit.
sc-async-commit-buffer = 100

# SnapshotKeepRecent defines how many state-commit snapshots (besides the latest one) to keep
# defaults to 1 to make sure ibc relayers work.
sc-keep-recent = 1

# SnapshotInterval defines the block interval the snapshot is taken, default to 10000 blocks.
sc-snapshot-interval = 1000

# SnapshotWriterLimit defines the max concurrency for taking commit store snapshot
sc-snapshot-writer-limit = 2

# CacheSize defines the size of the LRU cache for each store on top of the tree, default to 100000.
sc-cache-size = 1000

[state-store]

# Enable defines if the state-store should be enabled for historical queries.
# In order to use state-store, you need to make sure to enable state-commit at the same time
ss-enable = true

# DBBackend defines the backend database used for state-store.
# Supported backends: pebbledb, rocksdb, sqlite
# defaults to pebbledb (recommended)
ss-backend = "leveldb"

# AsyncWriteBuffer defines the async queue length for commits to be applied to State Store
# Set <= 0 for synchronous writes, which means commits also need to wait for data to be persisted in State Store.
# defaults to 100
ss-async-write-buffer = 100

# KeepRecent defines the number of versions to keep in state store
# Setting it to 0 means keep everything, default to 0
ss-keep-recent = 10000

# PruneIntervalSeconds defines the minimum interval in seconds + some random delay to trigger pruning.
# It is more efficient to trigger pruning less frequently with large interval.
# default to 600 seconds
ss-prune-interval = 60

# ImportNumWorkers defines the concurrency for state sync import
# defaults to 1
ss-import-num-workers = 1

[evm]
  http_enabled = true
  http_port = 8545
  ws_enabled = true
  ws_port = 8546

